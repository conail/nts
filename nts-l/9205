========================================================================
Date:         Wed, 13 May 92 22:56:21 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Arthur Ogawa <ogawa%ORION.ARC.NASA.GOV@vm.urz.uni-heidelberg.de>
Subject:      Wither TeX


I am glad to see the commencement of this list. I intend to contribute
ideas based on the needs of people preparing books for publication.

Art Ogawa

========================================================================
Date:         Fri, 15 May 92 10:07:13 -0600
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: "Jonathan M. Gilligan" <jongill%LILAC.BLDRDOC.GOV@vm.urz.uni-heidelberg.de>
Subject:      Re: font technology
In-Reply-To:  Anthony Shipman's message of Fri,
              15 May 92 22:56:18 EST <9205151336.AA10938@lilac.csd.bldrdoc.gov>


Anthony Shipman <als@BOHRA.CPG.OZ.AU> writes
   How difficult would it be to generate fonts dynamically a la TrueType?
   This would mean that TFM files are derived while TeX was running.  MetaFont
   need not be the source of the fonts as it seems to be quite slow.  TrueType
   outline fonts could be used directly or several different rasterizers could
 be
   made available depending on the font.

I don't get why you'd want this. Since you only need one .tfm for all mags
of a font, why not have a separate .tfm generator that you run once when you
install the non-metafont font? Does anyone really lose lots of time having to
stop TeX runs for missing tfms?

Also, I personally oppose any proposals that would require OS services like
forks that are not available on most existing OS's. NTS, like TeX, should
aim to run on as wide a hardware/OS base as possible. (Please, no flame wars!)

---Jon

------------------------------------------------------------------------------
Jonathan M. Gilligan            Time and Frequency Division
<jongill@lilac.bldrdoc.gov>     National Institute of Standards and Technology
                                Boulder, Colorado, USA

Disclaimer --- The government probably disagrees with my opinions.

========================================================================
Date:         Fri, 15 May 92 12:16:00 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: LMLARS01%ULKYVX@vm.urz.uni-heidelberg.de
Subject:      Re: font technology


Anthony Shipman asks:

<<How difficult would it be to generate fonts dynamically a la TrueType?
This would mean that TFM files are derived while TeX was running.  MetaFont
need not be the source of the fonts as it seems to be quite slow.  TrueType
outline fonts could be used directly or several different rasterizers could be
made available depending on the font.>>

Isn't this more or less what the vector based TeX's are doing already? For
example, I use Textures on a Macintosh with PostScript versions of the CM
fonts. I can type in one window and a couple of seconds later I see the preview
in another window. I can specify any scaling of any PostScript (or Truetype)
font and the operating system makes sure it's there for me to use at the right
resolution almost instantly.

However, I do notice you are asking for TFM files and not the bitmaps of the
fonts. It seems to me that the metric files in some form are intrinsic to the
font definition and probably don't have to be generated on the fly like
bitmaps. After all, they don't change with scaling; they're just scaled.

Of course, Adobe's new Multiple Masters font format changes all the rules
here...

Lee Larson    lmlars01@ulkyvx.louisville.edu
Department of Mathematics, University of Louisville

========================================================================
Date:         Fri, 15 May 92 17:31:42 BST
Reply-To: RHBNC Philip Taylor <P.Taylor%Vax.Rhbnc.Ac.Uk@vm.urz.uni-heidelberg.de>
From: CHAA006%VAX.RHBNC.AC.UK@vm.urz.uni-heidelberg.de
Subject:      Re: font technology


>>> Also, I personally oppose any proposals that would require OS services like
>>> forks that are not available on most existing OS's. NTS, like TeX, should
>>> aim to run on as wide a hardware/OS base as possible. (Please, no flame
 wars!)

Not a flame, just a 100% supporting statement.  NTS _must_ run on all platforms
that currently support TeX, and be capable of being ported to new OS's w/out
major effort.  Whether this implies that NTS must be written in WEB is a much
deeper question, and one that I hope we could discuss separately and at length
(i.e. not in the context of an unrelated question).

                                        Philip Taylor, RHBNC.

========================================================================
Date:         Fri, 15 May 92 10:44:24 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Ed Sznyter <ews%BABEL.BABEL.COM@vm.urz.uni-heidelberg.de>
Subject:      Re: font technology
In-Reply-To:  Your message of "Fri,
              15 May 92 10:07:13 CST." <9205151614.AA22646@netcomsv.netcom.com>


you write:
>
>
> Anthony Shipman <als@BOHRA.CPG.OZ.AU> writes
>    How difficult would it be to generate fonts dynamically a la
>    TrueType?  This would mean that TFM files are derived while TeX
>    was running.  MetaFont need not be the source of the fonts as it
>    seems to be quite slow.  TrueType outline fonts could be used
>    directly or several different rasterizers could be made available
>    depending on the font.
>
> Jonathan M. Gilligan writes:
> I don't get why you'd want this. Since you only need one .tfm for
> all mags of a font, why not have a separate .tfm generator that you
> run once when you install the non-metafont font? Does anyone really
> lose lots of time having to stop TeX runs for missing tfms?

        If you're using, e.g., the Sauter fonts, you can have separate
        .mf and .tfm files for each size.

> Also, I personally oppose any proposals that would require OS services like
> forks that are not available on most existing OS's. NTS, like TeX, should
> aim to run on as wide a hardware/OS base as possible. (Please, no flame wars!

        .tfm, .pk, .gf files, etc., are just a primitive caching
        mechanism; since they are idempotently recreatable, it seems
        unreasonable to restrict when they are created.  Leave that to
        the implementor of the machine-dependent code.

========================================================================
Date:         Fri, 15 May 92 18:03:41 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: bbeeton <BNB%MATH.AMS.COM@vm.urz.uni-heidelberg.de>
Subject:      Re:  font technology
In-Reply-To:  <01GK1ATQSGK0DSYDFT@MATH.AMS.COM>


anthony shipman (als@bohra.cpg.oz.au, 15 may 92) asks
   "How difficult would it be to generate fonts dynamically a la TrueType?
    This would mean that TFM files are derived while TeX was running."

does anyone know whether any font-generator other than metafont will
provide the tfm values needed to get proper results in tex math mode?
that, as far as i am aware, is the *real* problem with using non-mf
fonts in tex.
                                                -- bb

========================================================================
Date:         Fri, 15 May 92 18:12:27 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Anselm Lingnau <lingnau%MATH.UNI-FRANKFURT.DE@vm.urz.uni-heidelberg.de>
Subject:      Re: font technology
In-Reply-To:  <9205151341.AA23796@mcsun.EU.net*>



> How difficult would it be to generate fonts dynamically a la TrueType?
> This would mean that TFM files are derived while TeX was running.  MetaFont
> need not be the source of the fonts as it seems to be quite slow.  TrueType
> outline fonts could be used directly or several different rasterizers could b
e
> made available depending on the font.

I don't know anything about TrueType, but I suppose that there has to be some
sort of font data analogous to what is in the TFM files. Anyhow, what happens
nowadays is that TFM files are scaled according to the magnification that is
wanted in the TeX file. So there is only one TFM file for cmr10, cmr10
scaled\magstep1, or even cmr10 at 314.1592pt.

So, to me it seems that the point is moot, as long as you can get yourself a
TFM file for whatever TrueType font you want to use. Sort of what you do
with afm2tfm now. The actual rendering of the glyphs can be left to the
drivers. A mechanism similar to today's virtual fonts should be adequate, IMHO.

Anselm.
--
Anselm Lingnau, Buchenweg 1, 6239 Eppstein| You see things, and you say `Why?'
lingnau@math.uni-frankfurt.de      Germany| But I dream things that never were,
University of Frankfurt, CompSci and Maths| and say `Why not?'  --- G. B. Shaw

========================================================================
Date:         Fri, 15 May 92 22:56:18 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Anthony Shipman <als%BOHRA.CPG.OZ.AU@vm.urz.uni-heidelberg.de>
Subject:      font technology



How difficult would it be to generate fonts dynamically a la TrueType?
This would mean that TFM files are derived while TeX was running.  MetaFont
need not be the source of the fonts as it seems to be quite slow.  TrueType
outline fonts could be used directly or several different rasterizers could be
made available depending on the font.

This would be made easier if there was a cache.  Under UNIX, the algorithm
could be:

        open tfm file (in font cache)
        if not there
                fork a process to generate a tfm file in the cache
                retry the open
        fi

The cache could be expired periodically to stop it growing forever.  Drivers
can do something similar to generate bitmaps when needed.

Including the rasterizer in TeX itself would be rather difficult I suppose.


--
Anthony Shipman                 "You've got to be taught before it's too late,
CP Software Export Pty Ltd,      Before you are six or seven or eight,
19 Cato St., East Hawthorn,      To hate all the people your relatives hate,
Melbourne, Australia, 3121       You've got to be carefully taught."  R&H

E-mail: als@bohra.cpg.oz.au

========================================================================
Date:         Sat, 16 May 92 03:10:22 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Anthony Shipman <als%BOHRA.CPG.OZ.AU@vm.urz.uni-heidelberg.de>
Subject:      Re: font technology
In-Reply-To:  <199205151616.AA21433@yarra.pyramid.com.au>; from "Jonathan M.
              Gilligan" at May 15, 92 10:07 am


>
> Anthony Shipman <als@BOHRA.CPG.OZ.AU> writes
>    How difficult would it be to generate fonts dynamically a la TrueType?
>    This would mean that TFM files are derived while TeX was running.  MetaFont
>    need not be the source of the fonts as it seems to be quite slow.  TrueType
>    outline fonts could be used directly or several different rasterizers could
>  be
>    made available depending on the font.
>
> I don't get why you'd want this. Since you only need one .tfm for all mags
> of a font, why not have a separate .tfm generator that you run once when you
> install the non-metafont font? Does anyone really lose lots of time having to
> stop TeX runs for missing tfms?
>

This is something that has puzzled me.  What is the difference between a
10pt font with a magnification of 2 and a 20pt font with a magnification of 1.
I have assumed that MetaFont produces a slightly different result and that
you would really want different tfm files for different font (design) sizes.
(cf the cmr5.tfm, cmr6.tfm etc).




> Also, I personally oppose any proposals that would require OS services like
> forks that are not available on most existing OS's. NTS, like TeX, should
> aim to run on as wide a hardware/OS base as possible. (Please, no flame wars!)

There already are OS dependencies introduced in the web->native conversion.
At least on UNIX all the UNIX dependences like directory searching are taken
care of by web2c.


A non-fork solution is to send a message to a font service that adds to the
font cache.   I believe X11R5 does this now.  Each X terminal can request a
font at any size from the server and it will be generated if not already
available.

This is the sort of thing I would like to see TeX/drivers do.  Then you can
have one central font service on your network.  The font server can create
fonts using any method it likes eg from Postscript fonts, TrueType etc.,  as
long as can export a tfm file to TeX.



--
Anthony Shipman                 "You've got to be taught before it's too late,
CP Software Export Pty Ltd,      Before you are six or seven or eight,
19 Cato St., East Hawthorn,      To hate all the people your relatives hate,
Melbourne, Australia, 3121       You've got to be carefully taught."  R&H

E-mail: als@bohra.cpg.oz.au

========================================================================
Date:         Sat, 16 May 92 03:14:07 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Anthony Shipman <als%BOHRA.CPG.OZ.AU@vm.urz.uni-heidelberg.de>
Subject:      Re: font technology
In-Reply-To:  <199205151644.AA22389@yarra.pyramid.com.au>;
              from"CHAA006@VAX.RHBNC.AC.UK" at May 15, 92 5:31 pm


>
> >>> Also, I personally oppose any proposals that would require OS services
 like
> >>> forks that are not available on most existing OS's. NTS, like TeX, should
> >>> aim to run on as wide a hardware/OS base as possible. (Please, no flame
>  wars!)
>
> Not a flame, just a 100% supporting statement.  NTS _must_ run on all
 platforms
> that currently support TeX, and be capable of being ported to new OS's w/out
> major effort.  Whether this implies that NTS must be written in WEB is a much
> deeper question, and one that I hope we could discuss separately and at length
> (i.e. not in the context of an unrelated question).
>
>                                       Philip Taylor, RHBNC.
>

In all cases there is the fallback of loading pre-built fonts from a directory
somewhere for ports on really primitive OSes.

--
Anthony Shipman                 "You've got to be taught before it's too late,
CP Software Export Pty Ltd,      Before you are six or seven or eight,
19 Cato St., East Hawthorn,      To hate all the people your relatives hate,
Melbourne, Australia, 3121       You've got to be carefully taught."  R&H

E-mail: als@bohra.cpg.oz.au

========================================================================
Date:         Sat, 16 May 92 03:20:42 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Anthony Shipman <als%BOHRA.CPG.OZ.AU@vm.urz.uni-heidelberg.de>
Subject:      Re: font technology
In-Reply-To:  <199205151615.AA21383@yarra.pyramid.com.au>; from "Anselm
              Lingnau"at May 15, 92 6:12 pm


...............
> So, to me it seems that the point is moot, as long as you can get yourself a
> TFM file for whatever TrueType font you want to use. Sort of what you do
> with afm2tfm now. The actual rendering of the glyphs can be left to the
> drivers. A mechanism similar to today's virtual fonts should be adequate,
 IMHO.
>
> Anselm.
> --
> Anselm Lingnau, Buchenweg 1, 6239 Eppstein| You see things, and you say `Why?'
> lingnau@math.uni-frankfurt.de      Germany| But I dream things that never
 were,
> University of Frankfurt, CompSci and Maths| and say `Why not?'  --- G. B. Shaw
>

So I can conclude that what people do when importing fonts eg Postscript is
to keep the design size constant and vary the magnification?

--
Anthony Shipman                 "You've got to be taught before it's too late,
CP Software Export Pty Ltd,      Before you are six or seven or eight,
19 Cato St., East Hawthorn,      To hate all the people your relatives hate,
Melbourne, Australia, 3121       You've got to be carefully taught."  R&H

E-mail: als@bohra.cpg.oz.au

========================================================================
Date:         Sat, 16 May 92 07:03:48 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Karl Berry <karl%CS.UMB.EDU@vm.urz.uni-heidelberg.de>
Subject:      NTS name


(I just heard about this list, so forgive me if I'm
rehashing old subjects or whatever breach of etiquette.)

The name ``NTS'' is ok, but it doesn't explicitly acknowledge
the debt it will owe to TeX.  (If it's written from scratch
this is obviously irrelevant, but I doubt it will be.)

Does anyone share this concern?

The best name I've been able to think of is `ExT' (TeX shifted
by one, also fortuitiously reminiscient of `extension'), but
probably there are others.

karl@cs.umb.edu

========================================================================
Date:         Sat, 16 May 92 07:09:19 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Karl Berry <karl%CS.UMB.EDU@vm.urz.uni-heidelberg.de>
Subject:      NTS source


I was under the impression that NTS would be an extension to TeX.
OK, it doesn't necessarily have to be that, but let's be
realistic here.  Any program that is not as
close to upward-compatible as possible won't be adopted
(unless it is truly a major advance, I suppose), because
the millions of documents already written will break.
The only upward incompatibilities I was thinking of would
be new primitive control sequences.

I don't think it's likely that NTS will be a ``major advance'',
in the same way that TeX was a major advance over, say, troff.
DEK already did 90% of what's needed in a good typesetting
system, I think.  (For the vast majority of documents, anyway.)

If this is the base, then I think it would be crazy to
rewrite tex.web in C web or anything else.  Think of how
many years it took DEK to debug TeX; any rewritten new
program will take a similar amount of time.  If we don't
build on what we've got, then where are we?

karl@cs.umb.edu

========================================================================
Date:         Sat, 16 May 92 17:20:06 BST
Reply-To: RHBNC Philip Taylor <P.Taylor%Vax.Rhbnc.Ac.Uk@vm.urz.uni-heidelberg.de>
From: CHAA006%VAX.RHBNC.AC.UK@vm.urz.uni-heidelberg.de
Subject:      RE: NTS name


Karl ---

>>> The name ``NTS'' is ok, but it doesn't explicitly acknowledge
>>> the debt it will owe to TeX.  (If it's written from scratch
>>> this is obviously irrelevant, but I doubt it will be.)

At the DANTE meeting at which NTS was founded, the original proposal, from
Joachim, was that the group/project be called `pi'; the idea was that as Knuth
had declared that TeX would converge asymptotically towards \pi (and could
therefore only reach \pi at \infinity), the name `pi' would imply that the
group/project was to carry on where Don left off. However, there were many of
us present who felt that the name was singularly inappropriate, for two main
reasons: (1) TeX will become version \pi at Don's death; none of us wish to
contemplate that unpleasant but unavoidable eventuality, and we felt that to
suggest that we were already anticipating that event was in the worst taste;
(2) Don has made it quite plain that (my stress) `TeX IS FINISHED; there will
be no further changes other than necessary bug fixes; the responsibility for
TeX is solely his [Don's], and no group or individual will ever be authorised
to modify TeX'.  That being the case, it would be singularly offensive to
suggest that we were going against Don's express wishes and considering
extending TeX.  What we _are_ doing is starting again, and looking at all
possible options; whilst it is by no means impossible that the `New Typesetting
System' (when and if it comes to pass) will be _based on_ TeX, it would be a
great mistake to _assume_ that this will be the case; it would close too many
doors.  The project/group has therefore been given the totally non-contentious
name of `NTS' (New Typesetting System).

                                        Philip Taylor, RHBNC.

========================================================================
Date:         Mon, 18 May 92 09:15:39 +0100
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Peter Abbott <p.abbott%ASTON.AC.UK@vm.urz.uni-heidelberg.de>
Subject:      Re: NTS name
In-Reply-To:  Your message of Sat, 16 May 92 07:03:48 -0400.


>
>(I just heard about this list, so forgive me if I'm
>rehashing old subjects or whatever breach of etiquette.)
>
>The name ``NTS'' is ok, but it doesn't explicitly acknowledge
>the debt it will owe to TeX.  (If it's written from scratch
>this is obviously irrelevant, but I doubt it will be.)
>
>Does anyone share this concern?
>
>The best name I've been able to think of is `ExT' (TeX shifted
>by one, also fortuitiously reminiscient of `extension'), but
>probably there are others.
>
>karl@cs.umb.edu

Karl

The name of the distribution list was chosen at the Hamburg meeting of DANTE.
It was agreed that it should deliberately be different from TeX (or similar
variants).

It is not connected with the eventual name of any product which may be
produced.

Peter

========================================================================
Date:         Mon, 18 May 92 23:33:33 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Anthony Shipman <als%BOHRA.CPG.OZ.AU@vm.urz.uni-heidelberg.de>
Subject:      front-end, back-end


If you are going for a radical break with TeX then what I would like to see
is a split of the type-setting system into a front-end and back-end.

A lot of the ugliness of TeX stems from mixing text and commands together.
Then you have all those quoting problems trying to keep the two apart.

The "type-setting engine" of TeX could be separated out into a back-end
section.  The front-end could take care of whatever user-interface you want
either the traditional TeX, for compatibility, SGML, or even something WYSIWYG
if the back-end design were sufficiently clever.

Since the back-end would not be intended for users to talk to directly it could
have a stronger split between the text and the command language, rather like
PostScript.

--
Anthony Shipman                 "You've got to be taught before it's too late,
CP Software Export Pty Ltd,      Before you are six or seven or eight,
19 Cato St., East Hawthorn,      To hate all the people your relatives hate,
Melbourne, Australia, 3121       You've got to be carefully taught."  R&H

E-mail: als@bohra.cpg.oz.au

========================================================================
Date:         Tue, 19 May 92 03:26:41 -0600
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: "Jonathan M. Gilligan" <jongill%LILAC.BLDRDOC.GOV@vm.urz.uni-heidelberg.de>
Subject:      font technology
In-Reply-To:  Anthony Shipman's message of Sat,
              16 May 92 03:10:22 EST <9205151728.AA11820@lilac.csd.bldrdoc.gov>


   This is something that has puzzled me.  What is the difference
   between a 10pt font with a magnification of 2 and a 20pt font with
   a magnification of 1.  I have assumed that MetaFont produces a
   slightly different result and that you would really want different
   tfm files for different font (design) sizes.  (cf the cmr5.tfm,
   cmr6.tfm etc).

For the difference between cmr10 and cmr5 at 10pt, read the TeXbook
(page 16).  The .tfm files for each design size are generated by
metafont. The .tfm files for a given design size are independent of
the magnification.

   > Also, I personally oppose any proposals that would require OS
   services like > forks that are not available on most existing OS's.
   NTS, like TeX, should > aim to run on as wide a hardware/OS base as
   possible. (Please, no flame wars!)

   There already are OS dependencies introduced in the web->native
   conversion.  At least on UNIX all the UNIX dependences like
   directory searching are taken care of by web2c.

   A non-fork solution is to send a message to a font service that
   adds to the font cache.  I believe X11R5 does this now.  Each X
   terminal can request a font at any size from the server and it will
   be generated if not already available.

   This is the sort of thing I would like to see TeX/drivers do.  Then
   you can have one central font service on your network.  The font
   server can create fonts using any method it likes eg from
   Postscript fonts, TrueType etc., as long as can export a tfm file
   to TeX.

You are already assuming a lot.

1) There's a difference between system dependencies such as
file-handling and terminal I/O that can be assumed to be present on
all reasonable OS's.  Multitasking is not such an assumption.

2) How do you send a message to a font service on a non-networked
non-multitasking OS? What _is_ a font service on such a machine?

Am I missing something?

3) You can't automatically generate .tfm's for families 2 and 3 from
non-mf fonts. They need hand-tuned parameters that Postscript and
TrueType fonts don't specify. (See Karl Berry's work on generating
tfms for Lucida New Math fonts, for example).


---Jon
------------------------------------------------------------------------------
Jonathan M. Gilligan            Time and Frequency Division
<jongill@lilac.bldrdoc.gov>     National Institute of Standards and Technology
                                Boulder, Colorado, USA

Disclaimer --- The government probably disagrees with my opinions.

========================================================================
Date:         Tue, 19 May 92 12:07:00 +0100
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Peter Abbott <p.abbott%ASTON.AC.UK@vm.urz.uni-heidelberg.de>
Subject:      NTS and Graphics


Any new system should be able to handle graphics files.

1. It should be capable of accepting most of the common formats around

and

2. If it treated each graphic as a box for placement purposes, then
baselines and space would be automatically catered for.

The display driver should be able to either display the graphic or if
the output device cannot accept graphics then a box to indicate the
limits of the graphic is almost mandatory.

Reliance on EPSF is not acceptable (particularly as this generates
files of unacceptable size) which have attendant storage problems.

Peter

========================================================================
Date:         Tue, 19 May 92 11:47:38 MEZ
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Mike Dowling <I1041301%DBSTU1@vm.urz.uni-heidelberg.de>


Subject: dynacamic memory allocation for TeX derivatives

One aspect that I have often been confronted with that has been quite
frustrating is TeX's inability to allocate memory dynamically. It would
have saved me a number of headaches if TeX could only load as many
fonts, hyphenation patterns and so on that can physically fit into the
computer's memory. With the current version of emTeX these parameters
have now been set at levels that few people are likely to want to
exceed, but this is implementation dependent. For example, I have files
that will not run on our main-frame for reasons of memory although our
main-frame has 256 Mbytes of main memory.

If I understand things correctly, the main problem in implementing
dynamic memory allocation lies in Knuth's idea of having WEB expand into
Pascal, and Pascal does not support dynamic memory allocation.

Mike Dowling

========================================================================
Date:         Tue, 19 May 92 12:14:58 BST
Reply-To: RHBNC Philip Taylor <P.Taylor%Vax.Rhbnc.Ac.Uk@vm.urz.uni-heidelberg.de>
From: CHAA006%VAX.RHBNC.AC.UK@vm.urz.uni-heidelberg.de
Subject:      Re: dynamic memory allocation


>>> If I understand things correctly, the main problem in implementing
>>> dynamic memory allocation lies in Knuth's idea of having WEB expand into
>>> Pascal, and Pascal does not support dynamic memory allocation.

I think this is true only for the `trivial subset' of Pascal that Don chose
to use (for machine independence); pointer types simply could not work without
the existence of `new' (see Jensen and Wirth , page 142).


                                        ** Phil.

========================================================================
Date:         Tue, 19 May 92 12:43:00 LCL
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: UKI6%DKAUNI2@vm.urz.uni-heidelberg.de
Subject:      Re: font technology




>    This is something that has puzzled me.  What is the difference
>    between a 10pt font with a magnification of 2 and a 20pt font with
>    a magnification of 1.  I have assumed that MetaFont produces a
>    slightly different result and that you would really want different
>    tfm files for different font (design) sizes.  (cf the cmr5.tfm,
>    cmr6.tfm etc).
>
> For the difference between cmr10 and cmr5 at 10pt, read the TeXbook
> (page 16).  The .tfm files for each design size are generated by
> metafont. The .tfm files for a given design size are independent of
> the magnification.
>
One solution for this problem would be to scale the fonts in a non-
linear way.  So, for example, the width w of a character in size s
can be specified by w = s*w0+a (let w0 be the width in the design size,
which is '1' in this case).  The other parameters can be calculated in
a similar way.  This would give similar results to MetaFont: wider
characters in small sizes, without having to give parameter sets for
each size.  NTS should also be able to import common outline font
formats, like PostScript, MetaFont, TrueType or BitStream.

One other thing TeX can't do and NTS should do: write in other direc-
tions than left to right.  How about up -> down (like in many eastern
languages) or left <- right (like in hebrew/arabic) or diagonal over
the page -- for special effects?

tobias b k"ohler (uki6@dkauni2.bitnet)

========================================================================
Date:         Tue, 19 May 92 15:09:25 +0200
Reply-To: Schoepf@sc.ZIB-Berlin.DE
From: Rainer Schoepf <schoepf@SC.ZIB-BERLIN.DE>
Subject:      This list


Please,

this list has been newly created, not even announced everywhere yet.
I'd prefer postponing the discussions until all have had their chance
to join.

Rainer

========================================================================
Date:         Tue, 19 May 92 14:37:04 BST
Reply-To: RHBNC Philip Taylor <P.Taylor@Vax.Rhbnc.Ac.Uk>
From: CHAA006@VAX.RHBNC.AC.UK
Subject:      A New Typesetting System: Beyond TeX


To all NTS correspondents:

It would seem that the creation of the NTS-L list has somewhat let the cat
out of the bag: we are already besieged by messages urging that this feature
or that feature _must_ be included in `The New Typesetting System'.  But,
with the greatest respect to all who have contributed such suggestions,
these do seem somewhat premature (although entirely understandable) to me.

I am very concerned that attempts to define a successor to TeX should
neither violate Knuth's axiom: `TeX and MetaFont are complete; there will
be no further changes', nor should they simply provide an opportunity
for `creeping featurism' --- i.e. any new system, proposed as a successor to
TeX, shall be as carefully designed and considered as TeX was in the first
place.  It most certainly should NOT be TeX-3 plus everything that anybody could
possibly want.  Instead, we must start by considering exactly what it is about
TeX that we are seeking to perpetuate.

Is it, for example, TeX's descriptive and character-oriented nature --- the
fact that, in direct opposition to current trends, TeX requires the user to
_think_ about what he or she wants to achieve, and then express that thought in
as a series of words and symbols in a file, rather than as a series of
ephemeral mouse movements on a screen?  Is it, perhaps, its portability --- the
fact that implementations (almost entirely p.d.) exist for every major
operating system in the world?  Is it the deterministic nature of TeX --- the
fact that a given sequence of TeX commands and text-to-be-typeset will
_always_ produce exactly the same results, regardless of the machine on
which it is processed?  Is it the `boxes and glue' paradigm, that provides a
simple but somewhat naive model of black and white space on a printed page?
The ease with which form and content can be separated?  The implementation as a
macro, rather than procedural, language? (would a procedural TeX still be
recognisably TeX?)  Is it, perhaps, the incredible contortions one occasionally
has to go through to achieve a desired result?  Or the incredible elation when
such contortions finally achieve their desired effect?  How many of these
elements could be eliminated and still leave something that is recognisably
TeX?  Could, for example, TeX have a two-file representation, with commands and
pointers-to-text in one, while the second contains purely the text to be
typeset? (this might eliminate the need for an escape character on TeX
commands, allowing a `non-stropped' representation, while at the same time
eliminating at a stroke all the problems regarding the treatment of blank
space(s)).

Until we can identify exactly what it is about TeX that is so inherently
desirable, what hope have we of designing a typesetting system which can both
perpetuate the TeX philosophy _and_ provide the functionality which will be
needed for the start of the twenty-first century?

When we have identified what it is we seek to perpetuate, we can then consider
what it is we _need_ to add: what is it about TeX-3 that renders it inadequate
for our needs?  A perfectly valid answer to this question may well be `nothing'
--- it may simply be that we still do not know how to exploit TeX to the full.
If it can be _proved_ that there are fundamental deficiencies in TeX, then at
least we have a start --- we know what _must_ be added to TeX.  We can then
consider what additional facilities (`luxuries') we may allow ourselves to add.

To what extent will we allow ourselves the luxury of dependence on today's (and
tomorrow's) technology?  Are powerful processors and graphics displays now
sufficiently ubiquitous that a successor to TeX could have built in, right from
the start, simultaneous display of source file(s) and simulated finished text,
as a fundamental design desideratum.

What is the implementation language to be?  Is the universal availability
of the WEB family sufficient justification for insisting that a successor
to TeX be also written in WEB, or is the current obsession with C, and
object-oriented programming, and/or both, sufficient justification for
dumping WEB and conforming with the current received wisdom.  If we adopt
the latter course, how will we perpetuate Knuth's brilliant example of
`literate programming'?

These, I suggest, are just _some_ of the questions which must be answered
before we even _start_ to consider a successor to TeX.  I would urge you all
to consider these and other related questions before plunging prematurely
into a never-ending list of `NTS must ...' requirements.

                                        Philip Taylor, RHBNC.

========================================================================
Date:         Tue, 19 May 92 14:42:08 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Hubert.Palme@cyber.urz.uni-wuppertal.dbp.de
Subject:      Typesetting directions, was Re: font technology
In-Reply-To:  <DFNGATE:NzyGAgk7*>


> One other thing TeX can't do and NTS should do: write in other direc-
> tions than left to right.  How about up -> down (like in many eastern
> languages) or left <- right (like in hebrew/arabic) or diagonal over
> the page -- for special effects?

I agree very much, this makes "special" implementations like TeXXeT
obsolete. May be it is not realistic to have "NTS" typset in ANY
direction, but it would be helpful to add "landscape" as a direction.
This would finish the dependancy of such poor guys (like me) having
a cheap, narrow prtrait printer from special capabilities of the
drivers.

Greetings, Hubert Palme

========================================================================
Date:         Tue, 19 May 92 15:08:40 GMT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: spqr@MINSTER.YORK.AC.UK
Subject:      Re: font technology, and: Directions


Anselm Lingnau writes:
 > that done by whatever-to-XFM (NTS extended font metric) format converters,
 > just like we have afm2tfm today. Otherwise it'd bloat the main program
 > unnecessarily. We should take care that XFM is general enough to support all
 > these formats. As before, rendering the glyphs belongs to the
 > output driver'
yes yes, 100% yes!

 > Rotated text seems to be most useful for (short) labels on plots, and
 > `special effects' as above, anyhow. So rotated paragraphs don't appear too
 > important, but who knows?
labels or captions can easily be paragraphs. anyway, if you keep the
boxes model, you rotate boxes so who cares what the punter puts in it?

Phil (rightly) said `lets get back to basics' and `what is provably
wrong with TeX 3'. answer (and what I really spend every day having
trouble with): facilities for analyzing more than one page. If there's
one thing that would make me ditch TeX and go and buy a copy of
Pagemaker (I tell you, i am near to it!), its the impossibilty of
pleasing floats. Maybe the thing is insoluble, maybe algorithmic page
makeup can never work? Somone tell me what to say to clients who say
`why cant you make that figure go *there*'.

sebastian

========================================================================
Date:         Tue, 19 May 92 18:01:41 +0200
Reply-To: Dag Asheim <dash@ifi.uio.no>
From: Dag Asheim <dash@IFI.UIO.NO>
Subject:      Re: font technology, and: Directions
In-Reply-To:  spqr@MINSTER.YORK.AC.UK's message of Tue, 19 May 92 15:08:40 GMT


>Somone tell me what to say to clients who say
>`why cant you make that figure go *there*'.

Tell them:  Oh, but I can.  :-)

At least if I understand your problem correctly.  What you want, is
something which isn't a float after all.  But with the caption and the
all.  If you are using LaTeX's figure-environment, and struggeling
with
\begin{figure}[htb]
               ^^^
\end{figure}

With the style option here.sty (from all good TeX-archives), you can
instead write [H] to get the figure at that exact point in the text.

There is a possibillity that you know this, and that you hint at a
more fundamental problem with figure placement.  In that case, you
could just ignore this letter.

                                        Dag

========================================================================
Date:         Tue, 19 May 92 16:31:53 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Anselm Lingnau <lingnau@MATH.UNI-FRANKFURT.DE>
Subject:      Re: font technology, and: Directions
In-Reply-To:  <9205191048.AA22130@mcsun.EU.net*>



> One solution for this problem would be to scale the fonts in a non-
> linear way.  So, for example, the width w of a character in size s
> can be specified by w = s*w0+a (let w0 be the width in the design size,
> which is '1' in this case).  The other parameters can be calculated in
> a similar way.  This would give similar results to MetaFont: wider
> characters in small sizes, without having to give parameter sets for
> each size.

This seems to call for extended TFM files that include coefficients for
`scaling polynomials' for the parameters. Do we need to support this on a
per-character basis, or would it be sufficient to have one set of polynomials
for the whole file? Apparently the Thing To Do would be both --- have a global
set and allow per-character polynomials to override it.

> NTS should also be able to import common outline font
> formats, like PostScript, MetaFont, TrueType or BitStream.

Of course NTS should be able to support these font formats. But I'd rather see
that done by whatever-to-XFM (NTS extended font metric) format converters,
just like we have afm2tfm today. Otherwise it'd bloat the main program
unnecessarily. We should take care that XFM is general enough to support all
these formats. As before, rendering the glyphs belongs to the output driver's
domain.

> One other thing TeX can't do and NTS should do: write in other direc-
> tions than left to right.  How about up -> down (like in many eastern
> languages) or left <- right (like in hebrew/arabic) or diagonal over
> the page -- for special effects?

There's a paper by Knuth in TUGboat on up/down and left/right. Apparently
these can be done without major hassle. Diagonal should be more difficult,
since it doesn't fit nicely into TeX's boxes-and-glue model. (Do we want to
keep that? I suppose so!) I haven't actually thought this through, but suppose
one would be able to include a `slope' with boxes like so:

  a            b        +     c +-++    a: \hbox slope 0{foo}
       +---+       +     \      | ||    b: \hbox slope 30{foo}
       |   |        \     \     | ||    c: \hbox slope 90{foo}
       o---+         o     +    +-o+
       +---+          +

There might be a \boundinghbox command for finding a `bounding' hbox of such
a sloped box (\boundingvbox too, of course). Paragraphs might be difficult,
but then running text isn't usually set diagonally. Maybe one could have
sloped vboxes also, inside which hboxes automatically inherit the slope.

Rotated text seems to be most useful for (short) labels on plots, and
`special effects' as above, anyhow. So rotated paragraphs don't appear too
important, but who knows?

Anselm.
--
Anselm Lingnau, Buchenweg 1, 6239 Eppstein| You see things, and you say `Why?'
lingnau@math.uni-frankfurt.de      Germany| But I dream things that never were,
University of Frankfurt, CompSci and Maths| and say `Why not?'  --- G. B. Shaw

========================================================================
Date:         Tue, 19 May 92 16:48:47 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: bbeeton <BNB@MATH.AMS.COM>
Subject:      Re:  Typesetting directions, was Re: font technology
In-Reply-To:  <01GK6UNL73AQE2XJXE@MATH.AMS.COM>


hubert palme states that adding "landscape" to the basic capabilities
of nts would "finish the dependancy of such poor guys (like me) having
a cheap, narrow prtrait printer from special capabilities of the
drivers."

there are a couple of considerations here that seem nontrivial.

at present, everything in the dvi file essentially goes from
left-to-right, top-to-bottom.  for contiguous text on the same
baseline, one absolute starting location is required, followed by
incremental movements.  if rotated text is added, this either
 - puts the requirement to resolve the motion along another axis right
   back on the device driver, or
 - requires nts to output many more instances of absolute location,
   and use a second set of (rotated) fonts.
i believe that for languages that are set horizontally (and this
includes math for any natural language with which i am familiar), it
is most effective to do the initial setting in the "natural" direction
and then have the rotation applied when the bitmap is constructed;
this is equivalent to the first scenario above.  this has the virtue
that only one set of metrics is required, relative to the "natural"
baseline.  i don't feel qualified to comment on top-to-bottom
languages.

i would like to hear from someone who writes, or is very familiar with
the innards of, device drivers what the implications are in at least
the following instances:
 - devices with non-square rasters
 - devices (some typesetters) that are not based on raster technology,
   in particular non-postscript typesetters

i suspect that at the very least a second complete set of fonts may
be needed, though if the rotation is put off to the device driver
this should not affect the nts program itself.

would a requirement for rotation serve to exclude any classes of
output devices that are now in reasonably wide use, or which cannot
be replaced without great expense (e.g. typesetters)?
                                                -- bb

========================================================================
Date:         Tue, 19 May 92 11:54:00 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: LMLARS01%ULKYVX@vm.urz.uni-heidelberg.de
Subject:      Re:  Typesetting directions, was Re: font technology


> One solution for this problem would be to scale the fonts in a non-
> linear way.  So, for example, the width w of a character in size s
> can be specified by w = s*w0+a (let w0 be the width in the design size,
> which is '1' in this case).  The other parameters can be calculated in
> a similar way.  This would give similar results to MetaFont: wider
> characters in small sizes, without having to give parameter sets for
> each size.

This capability is already available in PostScript and TrueType. In fact, Adobe
has gone even beyond this with the new "Multiple Masters" PostScript format.
Take four fonts at the four corners of a square. An essentially infinite number
of different typefaces can be generated by scaling between the four corners. A
different typeface for each point in the square is generated. (For the
mathematicians reading this, they are defining a two parameter homotopy between
the corners.) It is possible to gradually transform Times into Helvetica this
way. A more practical application is to go from a normal Times into heavy bold
gradually to get just the weight you want. I think the Minion Multiple Master
set is already out and others will be released soon.

=============================================================================
Lee Larson                                     lmlars01@ulkyvx.louisville.edu
Department of Mathematics                                       (502)588-6826
University of Louisville
Louisville, Kentucky 40292 USA

========================================================================
Date:         Tue, 19 May 92 17:20:00 LCL
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: UKI6%DKAUNI2@vm.urz.uni-heidelberg.de
Subject:      Re: NTS and Graphics




>
> Any new system should be able to handle graphics files.
>
> 1. It should be capable of accepting most of the common formats around
>
> and
>
> 2. If it treated each graphic as a box for placement purposes, then
> baselines and space would be automatically catered for.
>
And it would be great if the text could "flow around" the picture, like
in many DTP programs ....

========================================================================
Date:         Tue, 19 May 92 19:24:17 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Dean Guenther <GUENTHER@TIGGER.CSC.WSU.EDU>
Subject:      RE: A New Typesetting System: Beyond TeX






>These, I suggest, are just _some_ of the questions which must be answered
>before we even _start_ to consider a successor to TeX.  I would urge you all
>to consider these and other related questions before plunging prematurely
>into a never-ending list of `NTS must ...' requirements.
>
>                                       Philip Taylor, RHBNC.


Well put Phil, I should think Rainer's list of

>1. stage: What should be changed?
>2. stage: How can this be realised?
>3. stage: Realisation.

should easily have step .5 added which would ask the questions Phil asked, and
more. I should think that setting up committees to review what it is we want to
do would be wise, i.e.,

        NTS.1001   graphics
        NTS.1002   fonts
        NTS.1002   implementation language
                .
                .
                .

I can't deny the committee efforts end up with strange products from time to
time, but I know of no other way to organize such a large project.

Rainer suggested we wait on discussions. During this (hopefully short) interim,
a structure could be built upon will aid in birthing NTS.

        -- Dean

========================================================================
Date:         Tue, 19 May 92 23:16:26 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Anthony Shipman <als%BOHRA.CPG.OZ.AU@vm.urz.uni-heidelberg.de>
Subject:      Re: font technology
In-Reply-To:  <199205190945.AA05124@yarra.pyramid.com.au>; from "Jonathan M.
              Gilligan" at May 19, 92 3:26 am


>
> 1) There's a difference between system dependencies such as
> file-handling and terminal I/O that can be assumed to be present on
> all reasonable OS's.  Multitasking is not such an assumption.
>
> 2) How do you send a message to a font service on a non-networked
> non-multitasking OS? What _is_ a font service on such a machine?
>
On such a machine it is a precomputed library like we have now.





> 3) You can't automatically generate .tfm's for families 2 and 3 from
> non-mf fonts. They need hand-tuned parameters that Postscript and
> TrueType fonts don't specify. (See Karl Berry's work on generating
> tfms for Lucida New Math fonts, for example).

Sure.  TeX math fonts will have to continue to come from Metafont
sources until a more general solution is found.  But there are many
uses for TeX other than maths and a wide variety of sources for fonts.
People have used a variety of Postscript fonts before without waiting for
maths versions.

I am just looking for ways of grouping together all of these font
sources to:
a)      save disk space by generating whatever is possible dynamically thereby
b)      increasing the range of fonts and sizes available and to
b)      reduce administrative headaches for fonts on networks by centralising
        them.

--
Anthony Shipman                 "You've got to be taught before it's too late,
CP Software Export Pty Ltd,      Before you are six or seven or eight,
19 Cato St., East Hawthorn,      To hate all the people your relatives hate,
Melbourne, Australia, 3121       You've got to be carefully taught."  R&H

E-mail: als@bohra.cpg.oz.au

========================================================================
Date:         Tue, 19 May 92 23:25:13 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Anthony Shipman <als%BOHRA.CPG.OZ.AU@vm.urz.uni-heidelberg.de>
Subject:      Re: font technology
In-Reply-To:  <199205191047.AA07142@yarra.pyramid.com.au>;
              from"UKI6@DKAUNI2.BITNET" at May 19, 92 12:43 pm


> One other thing TeX can't do and NTS should do: write in other direc-
> tions than left to right.  How about up -> down (like in many eastern
> languages) or left <- right (like in hebrew/arabic) or diagonal over
> the page -- for special effects?

Which reminds me, ditroff format has commands for drawing lines at any angle
and even spline curve commands.  Some more useful graphics primitives could
be defined for the dvi files to avoid resorting to non-standard specials.

Opcode 255 could be defined as an extension byte, followed by an extension
opcode.  Some things that could be added:

        more line and curve primitives
        colour
        manipulating well known graphics files(?)

--
Anthony Shipman                 "You've got to be taught before it's too late,
CP Software Export Pty Ltd,      Before you are six or seven or eight,
19 Cato St., East Hawthorn,      To hate all the people your relatives hate,
Melbourne, Australia, 3121       You've got to be carefully taught."  R&H

E-mail: als@bohra.cpg.oz.au

========================================================================
Date:         Wed, 20 May 92 08:51:00 N
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: FLEINERC%CFRUNI52@vm.urz.uni-heidelberg.de
Subject:      Features to keep from TeX



One thing I love about TeX is the possibility to change and understand
the format. You do not need a sophisticated program to understand
all the commands.

========================================================================
Date:         Wed, 20 May 92 08:55:00 N
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: FLEINERC%CFRUNI52@vm.urz.uni-heidelberg.de
Subject:      Format Codes



Sorry about the previous message, there is something missing:

One thing I love about TeX is the possibility to read and change
any format without the need of a sophisticated programm.
So it is very easy to have any program output text, tables, ...
in TeX-format.

NTS should have the same possibilities, even when there is
a WYSIWYG-Editor or the printfile is splitted between
format-codes and text.

Claudio Fleiner
fleinerc@cfruni52.bitnet

========================================================================
Date:         Thu, 21 May 92 11:27:00 +0200
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: N.POPPELIER%ELSEVIER.NL@vm.urz.uni-heidelberg.de
Subject:      RE: Typesetting directions, was Re: font technology
In-Reply-To:  <0E003C7FC005532B@HEARNVAX.nic.SURFnet.nl>


NTS should be accompanied by standards for the output format and the device
drivers, in which landscape is specified as a MUST. For the current TeX,
there is a DVI standard, but I don't know whether that specifies landscape
as a must, and TUG nor any other organization in the world has the means
to enforce this standard.

Nico Poppelier
Elsevier Science Publishers
(and TUG Board of Directors)

========================================================================
Date:         Fri, 22 May 92 20:18:27 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Joachim Schrod <schrod%ITI.INFORMATIK.TH-DARMSTADT.DE@vm.urz.uni-heidelberg.de>
Subject:      ftp archive site for NTS-L


Please note:

The NTS-L discussion is archived on

	ftp.th-darmstadt.de	[129.69.1.12]
	directory pub/tex/documentation/nts-l

Each file in this directory is named yymm, where (guess :-) yy is the
year and mm is the month when the mail arrived. (I.e., all postings
of one month are bundled in one file.)

Access this archive via anonymous ftp. You will like to use off bureau
hours since our bandwidth is low (but 2 MBits are coming Real Soon Now
:-). If the connection is slow, this has nothing to do with the
machine.
    Access via mail-server will be made available later this year.

Enjoy.

--
Joachim

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Joachim Schrod			Email: schrod@iti.informatik.th-darmstadt.de
Computer Science Department
Technical University of Darmstadt, Germany

	``How do we persuade new users that spreading fonts across the page
	like peanut butter across hot toast is not necessarily the route to
	typographic excellence?''			-- Peter Flynn

========================================================================
Date:         Sun, 24 May 92 20:16:36 +0200
Reply-To: Schoepf%sc.ZIB-Berlin.DE@vm.urz.uni-heidelberg.de
From: Rainer Schoepf <schoepf%SC.ZIB-BERLIN.DE@vm.urz.uni-heidelberg.de>
Subject:      Welcome message


Welcome to NTS-L, the discussion list about what is to come after TeX.

I'd like to open the discussion with some remarks about what happened
at the originating meeting.

There was a short (about one hour) discussion led by myself.

I took as a starting point a mail message that I had received somewhat
earlier from Philip Taylor of The University of London at Windsor.
Since I still think that this gives us a very nice base to put our
feet on, I will quote its main part below.


Rainer Schoepf

----

Originally-From: Philip Taylor (RHBNC) <P.Taylor@vax.rhbnc.ac.uk>

                       Does it make sense to invest major resources (and
I suspect the time involved is considerable) in simply perpetuating and
improving the TeX paradigm ?  Might we not do better to do what I am sure Don
would do if he were to find himself in the position today in which he found
himself in 1977: not ask `What is the best typesetting system available to me?
How can I improve it to the point where there are no apparent deficiencies in
the design?'  but  `Given the current state of the art of Computer Science,
what is the best possible typesetting system that I can design and implement?'
Do not misunderstand me --- I am not saying that TeX is so dated in its design
that we cannot possibly incorporate it in the typesetting system of tomorrow;
it may well be that TeX _still_ represents the state of the art.  But we should
not take that as an a priori fact; it must be as open to question as any other
postulate.  It seems, then, that we have at least five options:

1) To leave TeX as it is now.  This is clearly a valid option.  If Don is
   sufficiently happy with TeX that he is prepared to leave it for posterity
   in its present form, then I think we should certainly consider that as
   an option for the TeX world as a whole.

2) To extend TeX by just enough that those who really understand its
   deficiencies agree that the extensions are not only justified but
  _essential_: i.e. there are some `simple' typesetting tasks with which
   TeX \pi cannot deal with correctly, but with which an Extended TeX could.

3) To extend TeX to incorporate the combined wish-lists of the major
   TeX practitioners, while retaining TeX's present `look-and-feel'.

4) To extend TeX to incorporate the combined wish-lists of the major
   TeX practitioners, taking the opportunity to reconsider TeX's
  `look-and-feel' and to implement major changes in that area if it
   is felt beneficial.

5) To design a typesetting system for the twenty-first century, using
   whatever elements of TeX are felt to continue to represent the
   state of the typesetting art.

Of these, I feel that (3) is the least desirable.  It represents the worst
combination of `creeping-featurism' and unoriginal thought.  I prefer to
regard this as a non-option.  The other four, I all consider to be viable,
albeit with considerably different implications for the resources required.
I find it very hard to place them in rank order; all have pros and cons.
I think, at the moment, I would prefer to offer them simply as options, and
to invite informed comment.

========================================================================
Date:         Sun, 24 May 92 16:23:29 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Mark Steinberger <mark%STAT.ALBANY.EDU@vm.urz.uni-heidelberg.de>
Subject:      Re:  Welcome message


With regard to Philip Taylor's list of options, I would hesitate to
make concrete recommendations to the experts.

But I do hope that people keep in mind the number of megabytes of
people's disk space that are currently devoted to tex, together with
the fact that very few systems will have enough space for two such
systems.

For this reason, option 5 (starting essentially from scratch) would be
hard to implement. Many users would stay with tex, rather than try to
mount both systems during an interim period.

So I hope that the changes can be made gradually, upgrading a step at
a time in such a way that old source files can be ported without too
much pain. Remeber: some people have lengthy documents they have been
preparing over long periods of time.

Presumably, with proper care, this could even be done in the spirit of
option 4:


>4) To extend TeX to incorporate the combined wish-lists of the major
>   TeX practitioners, taking the opportunity to reconsider TeX's
>  `look-and-feel' and to implement major changes in that area if it
>   is felt beneficial.


--Mark
--------------------------------------------------------------------------
Mark Steinberger       |             mark@sarah.albany.edu
Dept. of Math. & Stat  |
SUNY at Albany         | Nonlinear similarity begins in dimension six.
Albany, NY 12222       |
--------------------------------------------------------------------------

========================================================================
Date:         Mon, 25 May 92 14:37:06 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: "Janusz S. Bie/n" <JSBIEN%PLEARN@vm.urz.uni-heidelberg.de>
Subject:      list archives



If I am not mistaken, this list is not archived. If it is not
possible to maintain its archives at DHDURZ1, perhaps somobody can do
it elsewhere?

JSB

========================================================================
Date:         Mon, 25 May 92 14:37:06 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: "Janusz S. Bie/n" <JSBIEN%PLEARN@vm.urz.uni-heidelberg.de>
Subject:      list archives



If I am not mistaken, this list is not archived. If it is not
possible to maintain its archives at DHDURZ1, perhaps somobody can do
it elsewhere?

JSB

========================================================================
Date:         Mon, 25 May 92 16:14:40 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Joachim Schrod <schrod%ITI.INFORMATIK.TH-DARMSTADT.DE@vm.urz.uni-heidelberg.de>
Subject:      Re: ftp archive site for NTS-L
In-Reply-To:  <199205221826.AA20882@rs3.hrz.th-darmstadt.de>; from "Joachim
              Schrod" at May 22, 92 8:18 pm


Hmmpf, I wrote
>
> Please note:
>
> The NTS-L discussion is archived on
>
> 	ftp.th-darmstadt.de	[129.69.1.12]
				 ^^^^^^^^^^^

This is the IP address of Stuttgart... :-( The IP address of Darmstadt
is 130.83.55.75.

--
Joachim

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Joachim Schrod			Email: schrod@iti.informatik.th-darmstadt.de
Computer Science Department
Technical University of Darmstadt, Germany

	``How do we persuade new users that spreading fonts across the page
	like peanut butter across hot toast is not necessarily the route to
	typographic excellence?				-- Peter Flynn

========================================================================
Date:         Mon, 25 May 92 18:01:09 BST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Timothy Murphy <tim%MATHS.TCD.IE@vm.urz.uni-heidelberg.de>
Subject:      Re: Welcome message
In-Reply-To:  Rainer Schoepf's message of Sun, 24 May 92 20:16:36 +0200


> 1) To leave TeX as it is now.  This is clearly a valid option.  If Don is
>    sufficiently happy with TeX that he is prepared to leave it for posterity
>    in its present form, then I think we should certainly consider that as
>    an option for the TeX world as a whole.

The contributions to nts-l that I've read to date
have confirmed in my mind
the wisdom of DEK in freezing TeX at 3.141.
Do any of the contributors to nts-l ever meet people out there,
in the non-TeX otherworld?
TeX needs simplification, not complication.
The LaTeX manual was the best thing
that ever happened to TeX.
Is there going to be a LaTeX3 manual?
It doesn't matter how good a program is
if only a small elite know how to use it.



Timothy Murphy

e-mail: tim@maths.tcd.ie
tel: +353-1-2842366 (home/office)
     +353-1-7021507 (university)
fax: +353-1-2842295
s-mail: School of Mathematics, Trinity College, Dublin 2, Ireland


========================================================================
Date:         Mon, 25 May 92 14:18:22 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Michael Barr <barr%TRIPLES.MATH.MCGILL.CA@vm.urz.uni-heidelberg.de>
Subject:      Complication vs Simplification


I mostly agree with Timothy Murphy, but added functionality does
not mean complication and may well mean substantial simplification.
To mention just one (not terribly important) point, the ability
to give expressions (e.g. \hsize - 5pt) as a specification would
lead to great simplification.  BASIC ( :>) ) is very simple---to the
user.  I still use it for all sorts of simple things.  Latex is
good, but not good enough and many of its deficiencies are due to
deficiencies in the ground language.

I would also go for Philip Taylor's option 4.  I think  a lot of TeX'
problems are caused by obscure and non-orthogonal syntax and I am all
for changing them.

Of all the insoluble problems (as opposed to merely difficult) in TeX,
I think a very high proportion are caused by the inability to back up
to where you were in the text at the time of a page break.  The rest of
the last paragraph is already set and you cannot unset it.

Oh and the last point made by Murphy about the number of users is really
not significant.  At least 90% of the world will not accept anything
but WYSIWYG (= WYSIAYG) and I don't think that TeX can be that for a
long time to come.  The resolution of printers is likely to remain
above that of displays for the forseeable future.

Michael Barr

========================================================================
Date:         Mon, 25 May 92 13:11:12 -0600
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: "Jonathan M. Gilligan" <jongill%LILAC.BLDRDOC.GOV@vm.urz.uni-heidelberg.de>
Subject:      Backward compatibility (was Welcome message)
In-Reply-To:  Mark Steinberger's message of Sun,
              24 May 92 16:23:29 EDT <9205242034.AA07561@lilac.csd.bldrdoc.gov>


Mark Steinberger  <mark@STAT.ALBANY.EDU> writes,
   With regard to Philip Taylor's list of options, I would hesitate to
   make concrete recommendations to the experts.

   But I do hope that people keep in mind the number of megabytes of
   people's disk space that are currently devoted to tex, together with
   the fact that very few systems will have enough space for two such
   systems.

   For this reason, option 5 (starting essentially from scratch) would be
   hard to implement. Many users would stay with tex, rather than try to
   mount both systems during an interim period.

I'm no expert either, but I strongly disagree. Moderately fast hard
disks can be had for about three (US) dollars per megabyte. A full TeX
implementation with device drivers and CM fonts (300 dpi) can be had
in less than ten Megs. After spending thousands to tens of thousands
of dollars on a computer, I'd prefer to have sysops lay out thirty
dollars or so to install a truly state-of-the-art typesetting system
than to have an inferior product only because it's compatible with
TeX!

   So I hope that the changes can be made gradually, upgrading a step at
   a time in such a way that old source files can be ported without too
   much pain. Remeber: some people have lengthy documents they have been
   preparing over long periods of time.

A system should be designed coherently, not piecemeal. A gradual
implementation would promote regrets late in the process that certain
things had not been put in at the beginning. As I understand history,
after designing and building the first TeX and mf ('78), Knuth found
so much lacking that he rewrote the whole system ('82) rather than
paste features on top of a flawed design. The new system was then
incompatible with the old and not handicapped with mistakes in the old
design. If I'm wrong about the history, I'd appreciate being
corrected.

People should be able to keep TeX on board while they get used to NTS
(see above). Also, conversion tools should not be too hard to write.
Finally, you'd be rather foolish to get rid of a thoroughly debugged
system (TeX) in favor of a new, relatively untried one. Even if NTS
claims to be TeX compatible, I'd hate to find a crucial
incompatibility when I'm writing against a deadline. I have had enough
trouble with updates to TeX and LaTeX (the infamous failure to set
\lefthyphenmin, \righthyphenmin when upgrading to TeX 3; conference
abstracts due tomorrow and a macro that works with Mar-92 LaTeX
breaks on a colleague's machine that has Jan-90 ILaTeX) that I know
whereof I speak.

---Jon

------------------------------------------------------------------------------
Jonathan M. Gilligan		Time and Frequency Division
<jongill@lilac.bldrdoc.gov>	National Institute of Standards and Technology
				Boulder, Colorado, USA

Disclaimer --- The government probably disagrees with my opinions.

========================================================================
Date:         Mon, 25 May 92 21:57:02 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: bbeeton <BNB%MATH.AMS.COM@vm.urz.uni-heidelberg.de>
Subject:      Re:  Backward compatibility (was Welcome message)
In-Reply-To:  <01GKFLJDZAZ6E2Y04P@MATH.AMS.COM>


jonathan gilligan (25 may 92) says
    ... As I understand history,
    after designing and building the first TeX and mf ('78), Knuth found
    so much lacking that he rewrote the whole system ('82) rather than
    paste features on top of a flawed design. The new system was then
    incompatible with the old and not handicapped with mistakes in the old
    design. If I'm wrong about the history, I'd appreciate being
    corrected.

partly true; certainly tex82 was not backward compatible in many ways
with tex78 once everything was settled.  however, one of the underlying
reasons for the redesign was the fact that knuth wrote tex78 for himself,
to typeset the 2nd edition of "the art of computer programming", vol 2,
and future volumes.  it was written in sail, which ran only on dec-10's
and -20's.  once he found that so many other people were interested in
being able to use it, it became imperative to rewrite it in a portable
language.  that in turn opened up the opportunity to make the changes
that had been shown by experience to be valuable.

during this recreation of tex, knuth changed his mind about some things,
but held tight on others -- in particular, not making tex a "real
programming language".  i believe his reasons have been recorded
somewhere, and i think it would be instructive to examine those reasons
to see if serious users think they're still valid.

one reason i do remember for knuth's decision not to support certain
features (e.g. graphics) is that these were already handled well
enough by other existing software, and were also largely device
dependent.  portability and device independence are two of the major
guiding principles behind the present tex system, and i doubt that
tex would have spread as widely as it has (and we wouldn't now be
discussing whether to change the ground rules) otherwise.

as one who had to make the switch from tex78 to tex82 *in support of
a production environment*, i caution people not to take too lightly
the dislocations that such a change can foster.
						-- bb

========================================================================
Date:         Mon, 25 May 92 23:39:39 +0200
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: Thorsten Ohl <ohl%CRUNCH.IKP.PHYSIK.TH-DARMSTADT.DE@vm.urz.uni-heidelberg.de>
Subject:      Re:  Backward compatibility (was Welcome message)


>>>>> On Mon, 25 May 92 21:57:02 CET, bbeeton <BNB@MATH.AMS.COM> said:

bb> during this recreation of tex, knuth changed his mind about some things,
bb> but held tight on others -- in particular, not making tex a "real
bb> programming language".  i believe his reasons have been recorded
bb> somewhere, and i think it would be instructive to examine those reasons
bb> to see if serious users think they're still valid.

This should be _very_ instructive!  Could someone please post this a
text or a reference?

bb> one reason i do remember for knuth's decision not to support certain
bb> features (e.g. graphics) is that these were already handled well
bb> enough by other existing software, and were also largely device
bb> dependent.  portability and device independence are two of the major
bb> guiding principles behind the present tex system, and i doubt that
bb> tex would have spread as widely as it has (and we wouldn't now be
bb> discussing whether to change the ground rules) otherwise.

I fully agree with the latter point, however from the user's side, the
missing graphics support is _the_ weak spot of the present TeX system.
It's a pity how much ingenuity is sometimes wasted on LaTeX pictures,
which will anyway look very poor compared to TeX's typesetting.  And
for technical/scientific publishing graphics are indispensable.

Of course, we can always use encapsulated PostScript (iff my co-author
has a PostScript printer) or METAFONT (iff my co-author has a working
mf installation) to create our pictures.  Unfortunately these are
conditions are not everywhere met. (Ever tried to use your own
METAfonts on a IBM 3820 printer?  Or PostScript on such a device?)

I know that this has been said before many times, but if ``NTS'' ever
wants to be viewed by Joe User as an improvement compared to (La)?TeX,
it will have to include DEVICE INDEPENDENT GRAPHICS!

Computing power has certainly increased in the last decade, hasn't it
become feasible to incorporate some or all of METAFONT's capabilities
into TeX?  It should not be too hard to create some user-friendly
METAFONT macro packages for the creation of simple, but visually
appealing graphics.

Note that this still fits nicely into the boxes'n'glue picture, the
only extension is the ability to fill some of these boxes differently ...

I know that such a things can easily been done under some operating
systems.  Given a dvi driver which is not broken (there are still too
many broken dvi drivers in use, but that's another story), it is
trivial to set up a quite comfortable environment for mixing TeX and
METAFONT under UNIX.  But what if my co-author works on a crufty IBM
with MVS?  Or isn't UNIX-literate and his system administrator has not
installed mf?

In the high energy physics community, (La)?TeX  has by now an
overwhelming ``marketshare''.  Given the very conservative attitude
towards computing in this community, ``NTS'' will have to provide
_considerable_ improvements if it wants to take over some this
``marketshare'' -- populating a small niche won't do.

Greetings,
Thorsten

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Thorsten Ohl, DESY (-T-), Notkestr. 85, W-2000 Hamburg 52, FRG
phone: +49-40-8998-3699,  fax: +49-40-8998-3282
e-mail: <ohl@apollo.desy.de>, <ohl@gnu.ai.mit.edu>,
        <ohl@crunch.ikp.physik.th-darmstadt.de>

========================================================================
Date:         Mon, 25 May 92 15:00:39 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: "Paul Barton-Davis" <pauld%CS.WASHINGTON.EDU@vm.urz.uni-heidelberg.de>
Subject:      typographic things about TeX that need fixing


1) Boxes and glue

	- this is not how "real" (i.e. human) typographers
   work, and on occasion, its not even how "real" (i.e. human)
   typesetters work. Knuth did a reasonable job of picking this
   as an underlying model for a first pass at a real typesetting
   system for general purpose computing engines; I think that
   hindsight, as well as Quark Express, Interleaf and Pagemaker,
   show that a different underlying model would be better.

	- one such model (which also has its problems) is
   a list of objects, not unlike a lisp list. Each object has
   attributes; boxes and glue would merely be two examples of
   objects (and perhaps the most prevalent still). Other attributes
   needed to provide a typographer with what she wants include various
   geometric relations not easily reduced to rectangular approximation
   (say, diameter), and color.

	- such a model would make all the good stuff that TeX does
   with paragraph and line breaking just as easy, but would also
   allow fun and games like text "flowing" around non-rectangular
   shapes easily.

	- I'd be interested in seeing other ideas that people
   have for replacing the boxes-and-glue model.

2) no cross-page optimization for floats, pagebreaks etc.

	- lots has already been written on this. Type&Set is perhaps
    the best compromise solution; NTS could do better. I make no
    suggestions on this - many others have thought about this a lot.

3) mixing markup and procedural text

	- "TeX" is fine as a markup langauge, and in fact closely
    parallels the workings of at least some typesetters.

	- "TeX" is lousy as a programming language, but experience
    demonstrates the need for using it as one.

	- NTS should separate the markup language from the
    macro/programming language. If possible, TeX should remain
    the markup language, which would enable back compatibility
    with both TeX itself and some other 3rd party tools.

	- perhaps NTS should not allow macro/function definitions
    within documents. This would make many people cringe, I know.

4) impossibility of visual design for document styles

	- after the horrors of the VorTeX project, can anyone seriously
    doubt that coupling TeX to a visual front end is a nightmare ?

	- I would never advocate a WYSIWYG front end for people
    writing documents, but it is absolutely necessary for people who
    design document styles. Some efforts on this have appeared in
    Tugboat, but the horror of the internals is just visible.

	- NTS needs to support fast, optional partial compilation,
    in order to make a visual front end a viable tool.

-- paul

ps. I still prefer TinT - "TinT Is Not TeX" oder "Tint Ist Nicht TeX"

========================================================================
Date:         Mon, 25 May 92 19:45:05 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
Comments:     Hyperbole mail buttons accepted, v3.02P.
From: Peter C Olsen <pcolsen%SUPER.ORG@vm.urz.uni-heidelberg.de>
Subject:      Goals for a successor to TeX


Here are a few things that I think are important for a successor to
TeX.

1. Portability.  I can (and do) run TeX on mainframes, workstations,
and MS-DOS PCs.  The same source runs everywhere.

2. Device independence.  I usually write my TeX source using Emacs and
AUC-TeX.  I use TeX without regard to the type of monitor or printer.

3.  Ability to put ink *precisely* where I want it, making full use of
all the resolution available from my output device.  In fact, I want
to get better resolution on my output device that my eye allows as an
input device.

I believe that these will require the retention of the "mark-up
language" approach in ascii, but I *don't* think that this prevents
graphics, or even WYSIW(A)YG front ends.  I use XFIG to construct
graphics in PiCTeX macros which are incorporated right into my TeX
source code; the same approach could probably be extended to a full
front end.

Peter



Peter Olsen, PE, n2ell, 410-997-8584, PO Box 410, Simpsonville, MD 21150-0410
 pcolsen@super.super.org  ...!uunet!super!pcolsen  (Home: ...!n2ell!pcolsen)
     "Imagination is more important than knowledge" --- Albert Einstein

========================================================================
Date:         Mon, 25 May 92 20:43:55 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: eijkhout%CS.UTK.EDU@vm.urz.uni-heidelberg.de
Subject:      Re: typographic things about TeX that need fixing


>From the keyboard of "Paul Barton-Davis" <pauld@CS.WASHINGTON.EDU>:

   hindsight, as well as Quark Express, Interleaf and Pagemaker,
   show that a different underlying model would be better.

And what model do they use? I'm not familiar with these packages.
Kindly enlighten me (and probably other readers of this group).

	- after the horrors of the VorTeX project, can anyone seriously
    doubt that coupling TeX to a visual front end is a nightmare ?

Yes, I can. Take a look at Griff, and see a wysiwyg front-end
that gives perfectly structured (La)TeX code as output.
 The idea that makes Griff tick is that it has two programming languages,
one to specify the structure of the document, and one that specifies
the looks of it. The mouse/menu-driven interface allows the user only
to input those elements that make sense structurally (no subsubsection
heading directly after a section heading, no abstract after the first heading
 ...)
 If there is any wysiwyg front-end for an sgml package, I'm sure that it
would look something like this.

    ps. I still prefer TinT - "TinT Is Not TeX" oder "Tint Ist Nicht TeX"

So how about telling us what the underlying model of TinT is?

Victor Eijkhout
Department of Computer Science; University of Tennessee at Knoxville
104 Ayres Hall; 1403 Circle Dr.; Knoxville TN 37996-1301
phone: +1 615 974 8298 (secretary 8295; fax 8296); home +1 615 558 3069
    Support the League for Programming Freedom! league@prep.ai.mit.edu



========================================================================
Date:         Mon, 25 May 92 18:09:53 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: "Paul Barton-Davis" <pauld%CS.WASHINGTON.EDU@vm.urz.uni-heidelberg.de>
Subject:      typographic things about TeX that need fixing
In-Reply-To:  eijkhout@CS.UTK.EDU's message of Mon,
              25 May 92 20:43:55 EDT
              <9205260046.AA00279@june.cs.washington.edu>


>From the crumb-laden, paper-buried keyboard of Victor Eijkhout:

   >From the keyboard of "Paul Barton-Davis" <pauld@CS.WASHINGTON.EDU>:

      hindsight, as well as Quark Express, Interleaf and Pagemaker,
      show that a different underlying model would be better.

   And what model do they use? I'm not familiar with these packages.
   Kindly enlighten me (and probably other readers of this group).

I can't enlighten you as the internals, but I note that all 3 can do
things that TeX cannot, or rather, since there is nothing TeX cannot
do [:-)], things that TeX cannot do without great effort. Ever tried
to get TeX to flow text around non-rectangular shapes ?

My point was merely that Knuth went and looked at what typographers
and typesetters did 10 or more years ago, particularly those concerned
with the publication of books like "The Art of Computer Programming".
In the last 10 years, the plethora of software applications, from
crummy word processors to stuff like Quark Express (used to set at
least 3 large circulation magazines) has, IMHO, added new ideas and
new demands to the design criteria for something that is used for typesetting.

	   - after the horrors of the VorTeX project, can anyone seriously
       doubt that coupling TeX to a visual front end is a nightmare ?

   Yes, I can. Take a look at Griff, and see a wysiwyg front-end
   that gives perfectly structured (La)TeX code as output.

I'll do it.

    The idea that makes Griff tick is that it has two programming languages,
   one to specify the structure of the document, and one that specifies
   the looks of it.

Sounds perfect. Where do I find out more ?

       ps. I still prefer TinT - "TinT Is Not TeX" oder "Tint Ist Nicht TeX"

   So how about telling us what the underlying model of TinT is?

The closest we ever got was the lisp list+atrributes I mentioned.
Basically, the whole page would just be a list of things, and the "DVI
driver" would be responsible for producing some "real page
description" from the list. TinT's job would have been to have taken
some marked-up text+images+filler and come up with a list that
provided information about each object and where it should be placed,
much like TeX.

Since we planned to implement the whole thing as a lisp interpreter
anyway, this would have been a snap. We did not, however, get far
enough to make a studied analysis of the kind of attributes that
typographical (lisp) objects should have available to them, merely a
conviction (and a few half-way decent examples) that those possessed
by boxes and glue are insufficient. We considered: diameter, bezier
boundaries, rotational orientation and local, non-uniform scaling
functions.

However, TinT is little more than a cute name.  Right, Tim ?

-- paul

========================================================================
Date:         Mon, 25 May 92 21:27:32 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: eijkhout%CS.UTK.EDU@vm.urz.uni-heidelberg.de
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  Your message of "Mon,
              25 May 92 18:09:53 PDT." <9205260111.AA19059@CS.UTK.EDU>


>From the dancing fingers of Paul Barton-Davis:

    >From the crumb-laden, paper-buried keyboard of Victor Eijkhout:

       >From the keyboard of "Paul Barton-Davis" <pauld@CS.WASHINGTON.EDU>:

:-)

>My point was merely that Knuth went and looked at what typographers
>and typesetters did 10 or more years ago, particularly those concerned
>with the publication of books like "The Art of Computer Programming".

Not unknowledgeable people have been heard to say that TeX can basically
only typeset TAoCP :-)

> Ever tried
>to get TeX to flow text around non-rectangular shapes ?

No, but I guess I could do it if I had to. It would involve \parshape
in some horrible way.

Let me extend the discussion a bit here. How many people share my impression
that some things get programmed too many times in macros in TeX that
should be internal? Like generating complicated parshapes? And that some
TeX internals really should be more accessible? Such as \halign or the
page breaker? For all of its programmableness TeX is every once in a while
a black box to a frustrating extent.

The problem of flowing around nonrectangular objects is one that has intrigued
 me
for a long time. TeX can generate the parshape (and even carry it over to the
next paragraph), but exactly what is the input data. If the figure is in
Postscript, does a formatter that can flow around a figure have to have
a complete on-board PostScript interpreter to determine the shape?

If that is the case, then device independence will be rather hard. Does TeX
include an interpreter for every graphics language, or do we stipulate
some external miracle program, much like the device drivers now, but at the
other end of teX, and rather more complicated?

Victor Eijkhout
Department of Computer Science; University of Tennessee at Knoxville
104 Ayres Hall; 1403 Circle Dr.; Knoxville TN 37996-1301
phone: +1 615 974 8298 (secretary 8295; fax 8296); home +1 615 558 3069
    Support the League for Programming Freedom! league@prep.ai.mit.edu


========================================================================
Date:         Mon, 25 May 92 18:41:33 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: "Paul Barton-Davis" <pauld%CS.WASHINGTON.EDU@vm.urz.uni-heidelberg.de>
Subject:      typographic things about TeX that need fixing
In-Reply-To:  eijkhout@CS.UTK.EDU's message of Mon,
              25 May 92 21:27:32 EDT
              <9205260130.AA01334@june.cs.washington.edu>


The keyboard of Victor Eijkhout writes:
   >From the dancing fingers of Paul Barton-Davis:

   >My point was merely that Knuth went and looked at what typographers
   >and typesetters did 10 or more years ago, particularly those concerned
   >with the publication of books like "The Art of Computer Programming".

   Not unknowledgeable people have been heard to say that TeX can basically
   only typeset TAoCP :-)

Not true :-) I myself have been involved with 1 publishing effort
using LaTeX - the result, whilst in the CS domain, looks nothing like
TAoCP, and is structured quite differently.

However, one might want to look at something like Tutfte's "The Visual
Display of Quantitative Information", and ask "could TeX have typeset
this ?" The answer is a cautious yes, with the followup "but why would
anyone want to use it for this". Therein, I think, hangs a tale.

   The problem of flowing around nonrectangular objects is one that has
 intrigued
    me
   for a long time. TeX can generate the parshape (and even carry it over to the
   next paragraph), but exactly what is the input data. If the figure is in
   Postscript, does a formatter that can flow around a figure have to have
   a complete on-board PostScript interpreter to determine the shape?

   If that is the case, then device independence will be rather hard. Does TeX
   include an interpreter for every graphics language,

This is what the programs the programs that do this do, I believe. If
the picture's in some unknown format, you're SOL. All part of the
argument for (1) modularity and (2) standards, I suppose.

						       or do we stipulate
   some external miracle program, much like the device drivers now, but at the
   other end of teX, and rather more complicated?

Sure. Bezier curves will cover most of the bases for us; have
something take arbitrary input, and output a nice bezier curve
description. Of course, this type of design goes to the heart of at
least one part of what NTS is all about, I hope.

-- paul



========================================================================
Date:         Mon, 25 May 92 21:34:55 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: eijkhout%CS.UTK.EDU@vm.urz.uni-heidelberg.de
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  Your message of "Mon,
              25 May 92 18:09:53 PDT." <9205260111.AA19059@CS.UTK.EDU>


A number of typographical books that I've seen mention some
illusive things called 'the grid'. I don't find this in TeX,
and some of the more interesting problems in page make-up
(read: all but impossible in TeX) are easily expressable in
terms of grids. Going from two to three columns at the transition
from one page to the next; a word 'continued' that is embedded in
the last line of a page; this is all impossible in TeX if you
use stretchable glue, and rather hard if you don't.

Implementing a grid in TeX means that pages don't get cut
off an infinite scroll, but are rather poured from this scroll
onto a grid, much like a paragraph is now poured in to a shape
of indents and line lengths. Of course the increase in computational
effort on TeX is enormous. Suddenly the paragraph shapes can be
determined by the placing of the paragraphs on the page, so the
page breaker will have to redo the paragraphs, and each paragraph
may undergo multiple formattings. However, computers have become
so much faster since the DEC-20 days that this shouldn't be a problem.

Personally, I think that adding this sort of capability to TeX
would cover the most sorely wanted features in TeX.

Victor Eijkhout
Department of Computer Science; University of Tennessee at Knoxville
104 Ayres Hall; 1403 Circle Dr.; Knoxville TN 37996-1301
phone: +1 615 974 8298 (secretary 8295; fax 8296); home +1 615 558 3069
    Support the League for Programming Freedom! league@prep.ai.mit.edu


========================================================================
Date:         Tue, 26 May 92 08:25:00 GMT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: malcolm <MALCOLMC%MOLE.PCL.AC.UK@vm.urz.uni-heidelberg.de>
Subject:      Re: typographic things about TeX that need fixing


from the weary desk etc.....

can someone explain to me why i should even contemplate
flowing my text around some arbitrary shape? what has this
to do with typographic excellence? could it be that
magazines and the majority of books have certain different
qualities which might make the holy grail of sharing the
same typesetter a rather elusive goal?

if the main attribute of nts is to allow text to flow, count me
out. my text flows from my fingertips quite happily as
it is. be real, this is trivia. i agree that as the salesman
demonstrates this on your machine, it looks dead cute, but
it is of no real value. perhaps we should be examining
the marketing strategy first, then we can decide what
to include.

malcolmc clark

========================================================================
Date:         Tue, 26 May 92 08:15:00 GMT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: malcolm <MALCOLMC%MOLE.PCL.AC.UK@vm.urz.uni-heidelberg.de>
Subject:      Re: typographic things about TeX that need fixing


interleaf, according to at least one of its author's
uses much the same model as TeX. it is of the same period, and certainly
uses the same line breaking algorithm (almost).

and to add to victor's paean to grif (griff?) i would
throw in quill. much more of a reasearch tool, but it
supports parallel views of the document: structure views,
wysiwyg (there, i said it!), markup views, toc views, index views
and so on. i personally think that like vortex, it has
lots to offer. one key aspect of vortex was the fact that
it was indeed an extension to TeX, and that it was an
evolving, structured, project. one of the things which it
had working against it was changes to the underlying
TeX. even bug fixes imply a lot of work, and TeX3 must have
laid it to rest. but before you slag off vortex, remember
that it was merely using tex as an engine on which to support
work on document structures. i think they done good.


but if you are still looking for a name, shouldn't this be
ATTAM? (all things to all men/mankind).

malcolm clark

========================================================================
Date:         Tue, 26 May 92 10:04:45 CET
Reply-To: untermarzoner%vnet.ibm.com@vm.urz.uni-heidelberg.de
From: Uwe Untermarzoner <untermarzoner%VNET.IBM.COM@vm.urz.uni-heidelberg.de>
Subject:      Griff


Some appends ago there was Griff mentioned; could someone please provide
some more info about this? offline also welcome ;-)
thanks.

Mit freudlichen Gruessen / kind regards
Uwe A. Untermarzoner                     IBM Academic Information System

InterNet: untermarzoner@vnet.ibm.com
BitNet:   UNTERMAR@DHDIBM1.bitnet
VoiceNet: ++49-711-7207-4099
FaxNet:   49-711-7207-4111
SnailNet: IBM Deutschland Lehre und Forschung
          Plieninger Str. 140, W-7000 Stuttgart 80, Germany

========================================================================
Date:         Tue, 26 May 92 10:04:45 CET
Reply-To: untermarzoner%vnet.ibm.com@vm.urz.uni-heidelberg.de
From: Uwe Untermarzoner <untermarzoner%VNET.IBM.COM@vm.urz.uni-heidelberg.de>
Subject:      Griff


Some appends ago there was Griff mentioned; could someone please provide
some more info about this? offline also welcome ;-)
thanks.

Mit freudlichen Gruessen / kind regards
Uwe A. Untermarzoner                     IBM Academic Information System

InterNet: untermarzoner@vnet.ibm.com
BitNet:   UNTERMAR@DHDIBM1.bitnet
VoiceNet: ++49-711-7207-4099
FaxNet:   49-711-7207-4111
SnailNet: IBM Deutschland Lehre und Forschung
          Plieninger Str. 140, W-7000 Stuttgart 80, Germany

========================================================================
Date:         Tue, 26 May 92 09:00:47 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.uni-heidelberg.de>
From: eijkhout%CS.UTK.EDU@vm.urz.uni-heidelberg.de
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  Your message of "Tue,
              26 May 92 08:25:00 GMT." <9205260726.AA22771@CS.UTK.EDU>


>from the weary desk etc.....

That must explain the following:

>can someone explain to me why i should even contemplate
>flowing my text around some arbitrary shape? what has this
>to do with typographic excellence?

1/ Who are you to define excellence? Isn't this a bit of an elitist
point of view?

2/ Flowing around an arbitrary shape is only slightly harder than
flowing around a regular shape. I think the point is that the
shape is usually at some predetermined place on the page, and
TeX is almost totally lacking in the capability of interacting
with preplaced elements on the page.
    And this latter capability is, I think, the sole difference
between book typography and magazine typography. Take NewsWeek
or whatever other weekly and you'll see plenty of places where
the text has managed to flow around some fixed object on the
page.

Victor Eijkhout
Department of Computer Science; University of Tennessee at Knoxville
104 Ayres Hall; 1403 Circle Dr.; Knoxville TN 37996-1301
phone: +1 615 974 8298 (secretary 8295; fax 8296); home +1 615 558 3069
    Support the League for Programming Freedom! league@prep.ai.mit.edu



========================================================================
Date:         Tue, 26 May 92 15:49:12 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: bbeeton <BNB@MATH.AMS.COM>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <01GKGNFJL0MAE2XZPM@MATH.AMS.COM>


i think i understand where malcolm is coming from:
     ... why i should even contemplate
    flowing my text around some arbitrary shape? ...

i would like to add one more "given" to the list of goals:

whatever changes/improvements/whatever may be made should not be done
at the expense of making what tex was originally designed for more
difficult or impossible.

i am pretty sure that no one is intending such an effect, but i think
it is worth having the goal stated explicitly.

for those of us whose bread and butter is mathematics composition,
there is simply *no other tool* that fills our needs.  please don't
even contemplate anything that might take this away from us.
						-- bb


========================================================================
Date:         Tue, 26 May 92 18:09:21 +0200
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: N.POPPELIER@ELSEVIER.NL
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <94E1DC41A008DA59@HEARNVAX.nic.SURFnet.nl>


>for those of us whose bread and butter is mathematics composition,
>there is simply *no other tool* that fills our needs.  please don't
>even contemplate anything that might take this away from us.

With hesitation  ;-)  but still, I disagree with Barbara. There are one or
two, SGML-based, tools, that we think fulfill/will fulfill in the near future
our needs for mathematics composition, which is very important also to us.

TeX is rapidly losing its advantage with respect to The Competition.

Nico

----------------------------------------------------------------------
Dr. Nico A.F.M. Poppelier
Elsevier Science Publishers, APD, R&D Department
Sara Burgerhartstraat 25, 1055 KV Amsterdam, The Netherlands
Phone: +31-20-5862504. Fax: +31-20-5862425. Email: n.poppelier@elsevier.nl


========================================================================
Date:         Tue, 26 May 92 10:02:56 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@DHDURZ1.bitnet>
From: "Paul Barton-Davis" <pauld@CS.WASHINGTON.EDU>
Subject:      typographic things about TeX that need fixing
In-Reply-To:  malcolm's message of Tue,
              26 May 92 08:25:00 GMT
              <9205260725.AA08113@june.cs.washington.edu>


 Malcolm <MALCOLMC@MOLE.PCL.AC.UK> writes:

   can someone explain to me why i should even contemplate
   flowing my text around some arbitrary shape? what has this
   to do with typographic excellence? could it be that
   magazines and the majority of books have certain different
   qualities which might make the holy grail of sharing the
   same typesetter a rather elusive goal?

This could be. However, as I outlined in my reply to Joachim, I have
seen first hand some empirical evidence that this is not the case.
Do you have any strong reasons for believing this to be so ? If so,
lets hear them, for this instantly puts a big constraint on what's
worth changing in TeX.

   if the main attribute of nts is to allow text to flow, count me
   out. my text flows from my fingertips quite happily as
   it is. be real, this is trivia.

Its trivia if you only want to publish technical books, journals or
fiction. Its not trivia if NTS is intended to be as powerful as human
typesetters, or even as powerful as Quark Express. I have no interest
in a tidied-up TeX. I have a huge amount of interest in a
TeX-compatible tool that makes Mac tools redundant, and would enable
me to typeset both the Journal of Complex Systems and Edward Tufte's
next book from my workstation.

-- paul




========================================================================
Date:         Tue, 26 May 92 18:48:05 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@DHDURZ1.bitnet>
From: Joachim Schrod <schrod@iti.informatik.th-darmstadt.de>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <9205261418.AA01566@hp5.iti.informatik.th-darmstadt.de>;
              from"N.POPPELIER@ELSEVIER.NL" at May 26, 92 6:09 pm


Nico wrote:
>
> >for those of us whose bread and butter is mathematics composition,
> >there is simply *no other tool* that fills our needs.  please don't
> >even contemplate anything that might take this away from us.
>
> With hesitation  ;-)  but still, I disagree with Barbara. There are one or
> two, SGML-based, tools, that we think fulfill/will fulfill in the near future
> our needs for mathematics composition, which is very important also to us.
>
> TeX is rapidly losing its advantage with respect to The Competition.

Hey, fine!

Then we don't have to do any work after all, have we? If the solution
is there?! I think we are striving for a good system and are not so
ego-boosted that it must be ``our'' system under all circumstances,
or?

So Nico, please tell me, where I can ftp this system from? I want to
give it to my students and my colleagues. I need the system for DOS,
Atari ST, Amiga, Macs, some kind of UNIX boxes (only the usual ones:
with SunOS, AIX, HP-UX, System V R3, System V R4, ULTRIX, SCO UNIX
and Interactive, no exotes), VMS, and MVS. (Well, the latter is not
so important. This ol' dinosaur will vanish.) Since we need
approximately 5000 licenses we cannot afford to buy one, we don't
have enough money.
    I have always searched for such a system -- as you might know, I
have even set up a ftp server for SGML parsers and primitive
SGML-to-TeX translators which are freely distributable. But I must
have missed this system which makes SGML really usable from the
author's point of view. I mean, parsers are joyfull for a programmer,
but the author needs a user interface -- and the ASCII input of SGML
tags is even worse than the input of TeX text (at least with the DTDs
I know).
    Oh, btw, are DTDs enclosed? I'm still looking for some good ones
which I may rely on and which I may share freely with my co-authors
(read: which I can redistribute without copyright problems). The TEI
DTDs are not really usable for scientific articles (or might be I
haven't grokked them!?) Is the HyTime DTD (not the one in the pseudo
notation available on many ftp servers -- I mean the Real One!) part
of this system?

Full of hope


========================================================================
Date:         Tue, 26 May 92 18:37:26 +0200
Reply-To: "NTS-L Distribution list" <NTS-L@DHDURZ1.bitnet>
From: Rolf Lindgren <rolf.lindgren@usit.uio.no>
Subject:      Re: typographic things about TeX that need fixing


Joachim Schrod writes:
 > added ads until now -- then we would build the egg-laying
 > whool-giving cow-pig.) Malcolm wants only the latter -- and that's

Could I have that in German, please? What does it mean?
 > 	would be good then: People should grok the difference
 > 	between a WYSIWYG system and a direct manipulation system.

You might want to check out the new WIMPy WYSIWG professional typesetting
system for the Macintosh called Quoin. From what I have gathered, it's as
compromise between what typographers have been able to do in the past but
what WYSIWYG won't normally give them. It appears to be the cross between
structural markup and direct preview that Publisher attempted.

All I want this far, is the ability to align lines of text to the same
`kegel' across several pages, thus:

---- ---- ---- ---- ---- ---- ----
---- ---- ---- ---- ---- ---- ---- All lines on all pages match
---- ---- ---- ---- ---- ---- ---- the same kegel. This is not
---- ---- ---- ---- ---- ---- ---- disturbed by illustrations, because
---- ---- ---- ---- ---- ---- ---- white space is used to accomodate this.

 1    2    3    4    5    6    7

If NTS could accomodate a grid that text could be flown into, then I could
specify exactly how many lines I want on each page and how much whitespace
to add before and after titles and illustrations so as to keep them on
kegel. Now, this is actually requested by some typesetters. It's almost
impossible to avoid orphans then, because these guys actually want the
height of the text to remain constant as well.

As a bonus... (The remaining can be skipped by purists :-)

	I might want to have added an operator \epahsrap (read it
	backwards) that could take as arguments where to fill in text on
	the subsequent n lines. Consider:

		\epahsrap 0cm-2cm 4cm-7cm 1 % Line 1
			  0cm-2,5cm 4,3cm-7,6cm	% Line 2
				% etc. etc. etc.

Flowing text around illustrations would then be trivial.

Now, you still would have to calculate by hand how long the lines would
have to be.  But it would not take much work because, since the kegel is
fixed (no vertical glue), and since you know how much whitespace will be
added to the picture, you'd know excactly where the lines would cover the
illustration.

Of course, for illustrations in the middle of a paragraph, you'd still
have to see a preprint to know where the initial line will break, but a
TeX macro might be able to calculate this? Give such an operator, wouldn't
it be possible to write a routine that takes a set of line widths and a
request for where in the paragraph to start the illustration, then TeX
could figure out the rest?

Not being much of a programmer, I don't know how difficult this might be
to accomplish. If TeX's line-breaking algorithm still could be useful then
the _output_ of this system would still look nicer than the output of most
WYSIWYG systems.

Still, I feel that TeX is and NTS ought to be a system for writing
communication of knowledge (science), with minimal heed taken to the
writing of presentation of ideas. The latter is the stuff of WYSIWYG
systems. But if you could get it as a bonus of already useful
implementation, then I'm all for it.



 > 	``How do we persuade new users that spreading fonts across the page
 > 	like peanut butter across hot toast is not necessarily the route to
 > 	typographic excellence?				-- Peter Flynn

Gee, I don't _know_, what I usually do is showing the font spreaders the
work of another font spreader. Then they sometimes get the point. If you
find out, please tell me.

       Rolf Lindgren           |       "The opinions expressed above are
       616 Bjerke Studentheim  |        not necessarily those of anyone"
       N-0589 OSLO 5           |           rolfl.lindgren@usit.uio.no



========================================================================
Date:         Tue, 26 May 92 09:57:07 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@DHDURZ1.bitnet>
From: "Paul Barton-Davis" <pauld@CS.WASHINGTON.EDU>
Subject:      typographic things about TeX that need fixing
In-Reply-To:  Joachim Schrod's message of Tue,
              26 May 92 17:49:24 MESZ
              <9205261601.AA18757@june.cs.washington.edu>


Joachim Schrod <schrod@ITI.INFORMATIK.TH-DARMSTADT.DE> writes:

   Victor wrote:
   >
   > Take NewsWeek
   > or whatever other weekly and you'll see plenty of places where
   > the text has managed to flow around some fixed object on the
   > page.

   Yes -- that's the difference between you and Malcolm. You want
   something that's able to typeset NewsWeek, i.e. magazines, *and*
   Books (incl. common types of journals). (I wonder that nobody has
   added ads until now -- then we would build the egg-laying
   whool-giving cow-pig.) Malcolm wants only the latter -- and that's
   clearly the realm of TeX now. I could never understand those people
   who think that TeX is an appropriate tool for these problems.

I'll try hard not bristle, Joachim :-) Some of us are interested in
the idea of an "NTS" exactly *because* we don't think that TeX is
appropriate. Look, I worked for a small startup called ScenicSoft
before I came to the UW CS Lab. ScenicSoft's main product is a tool
that is a combination of TeX and troff (literally - both \command and
cmd !!). We used this to build turnkey typesetting systems that
printed books, real estate listing magazines, for-sale magazines,
directories and so on. It had some very sophisticated image processing
in its backend, and they have some happy customers using this stuff to
print things that would be a nightmare with TeX, as well as things
that TeX could do better.

So, its not impossible for a command-driven markup system to do books,
magazines and advertisements; its just a major pain. Given that TeX
can do books with ease, I would have thought that one obvious thing to
do is to ask if NTS can do other types of typography just as (or even
more) easily. I gave the example of Tufte's books, which I would very
much like to be able to produce myself; TeX can't do it; and I don't
like the sacrifices of other tools, although Quark Express might be
the one.

   Well, I'm among the third party in this round (Hi, Phil :-). I
   question these implicite assumptions you both made. I would like to
   see explicitely mentioned which goals a NTS should adress.

This is why I raised the issue of some fundamental typographic issues,
which I believed Victor followed up on fairly well. Below, you raise
some more issues in a constructive fashion.

   In addition, I would like to see a discussion about the level we will
   address:

    -- Do we talk about a typesetting system?

Primarily yes. I thought that NTS was an acronym for "New TYPESETTING System".

    -- Do we talk about the functionality of an author system?
	   Then the typesetting problem is only a small part of it. What
	   about the other tools, the support modell, etc.?

As an ancillary function, of course. I have long advocated something
that sounds a bit like what Griff is - visual design for typographers;
structured markup ala SGML for authors. This has the benefit of making
zillions of tools already out there available for authors, and
minimizing the fool-proofness of the visual interface.

    -- Do we talk about how an author system with the functionality of
       TeX shall be used?
	   Then we should stop with this WYSIWYG gargabe.

See above.
							  First, some
	   reading of a few textbooks or articles
	   would be good then: People should grok the difference
	   between a WYSIWYG system and a direct manipulation system.

Some of us have. However, there seems to be a marked reluctance to get
down to details. Phil Taylor, or someone else, proposed a specific
list of categories to consider as part of a breakdown of the problem.
Victor & I asked questions about the fundamentals of the typographic
model. Until we have some basic model to congregate around, this is
going nowhere.

		   Is this a discussion of professionals, of scientists,
	   or do we just babble?

All of the above.

   Before this is not made clear, everybody will just add his $0.02 --
   but we will never get enough money to get the ball rolling.
       These are not my $0.02 -- this is my opinion as a computer
   scientist, working for years in the area of software engineering, and
   doing his Ph.D. thesis now in User Interface research.

Lovely. Instead of castigating those of us with similar background and
similar interests, how about telling us *specifically* what you'd
like NTS to look like ? Tell us if you want to retain the boxes & glue
model. Tell us if you want ever going to allow typographers, people who
work with visual aspects of a document, to have visual, not
structured, controls. Tell us if you want to impose a strict
separation between document design and authoring. Tell us if you want
to integrate the handling of graphics, and if so, what
limitations on such graphics you would make. Tell us if you want to
allow NTS to typeset layout dominated books, like art books or
Tufte's. Tell us if you think NTS should have a real programming
language. If so, tell us if you think it should live in backend.
Tell us ... you get the picture.

Then, we can start to talk about both generics and specifics. For the
record, I support all of the above things.

-- paul


========================================================================
Date:         Tue, 26 May 92 16:40:00 +0100
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Frank Poppe <POPPE@swov.nl>
Subject:      Re: typographic things about TeX that need fixing


Victor Eijkhout in response to somebody else (whose name I cannot
 find anymore....)
]>from the weary desk etc.....
]
]That must explain the following:
]
]>can someone explain to me why i should even contemplate
]>flowing my text around some arbitrary shape? what has this
]>to do with typographic excellence?
]
]1/ Who are you to define excellence? Isn't this a bit of an elitist
]point of view?
]
]2/ Flowing around an arbitrary shape is only slightly harder than
]flowing around a regular shape. I think the point is that the
]shape is usually at some predetermined place on the page, and
]TeX is almost totally lacking in the capability of interacting
]with preplaced elements on the page.
]    And this latter capability is, I think, the sole difference
]between book typography and magazine typography. Take NewsWeek
]or whatever other weekly and you'll see plenty of places where
]the text has managed to flow around some fixed object on the
]page.

I agree. But I'd like to have the ability to link the place of the
 shape to the text. I.e., at a certain (to me logical) place in my source
 the command to place a figure to the right margin (or to reserve
 some room for that figure) should cause `NTS' to flow around that
 shape, except if the shape does not fit on the rest of the page (or
 column..), in which case the shape should move to the next
 page/column.

 The next step would be that this shape would stick out into the
 other column on a page....

 Frank Poppe
 <poppe@swov.nl>


========================================================================
Date:         Tue, 26 May 92 17:49:24 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Joachim Schrod <schrod@iti.informatik.th-darmstadt.de>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <9205261322.AA01434@hp5.iti.informatik.th-darmstadt.de>;
              from"eijkhout%CS.UTK.EDU@vm.urz.uni-heidelberg.de" at May 26,
              92 9:00 am


Victor wrote:
>
> Take NewsWeek
> or whatever other weekly and you'll see plenty of places where
> the text has managed to flow around some fixed object on the
> page.

Yes -- that's the difference between you and Malcolm. You want
something that's able to typeset NewsWeek, i.e. magazines, *and*
Books (incl. common types of journals). (I wonder that nobody has
added ads until now -- then we would build the egg-laying
whool-giving cow-pig.) Malcolm wants only the latter -- and that's
clearly the realm of TeX now. I could never understand those people
who think that TeX is an appropriate tool for these problems.

Well, I'm among the third party in this round (Hi, Phil :-). I
question these implicite assumptions you both made. I would like to
see explicitely mentioned which goals a NTS should adress.

In addition, I would like to see a discussion about the level we will
address:

 -- Do we talk about a typesetting system?
 -- Do we talk about the functionality of an author system?
	Then the typesetting problem is only a small part of it. What
	about the other tools, the support modell, etc.?
 -- Do we talk about how an author system with the functionality of
    TeX shall be used?
	Then we should stop with this WYSIWYG gargabe. First, some
	reading of a few textbooks or articles
	would be good then: People should grok the difference
	between a WYSIWYG system and a direct manipulation system.
	They should know the concepts behind WIMPs and NERDs. There
	are years of research in this area. Check out old EP/ODD
	issues (btw, GRIF is described there, I believe in an '88
	issue), or Ben Shneiderman's book _Designing_the_User_Interface_,
	for a beginning.
		Is this a discussion of professionals, of scientists,
	or do we just babble?


Before this is not made clear, everybody will just add his $0.02 --
but we will never get enough money to get the ball rolling.
    These are not my $0.02 -- this is my opinion as a computer
scientist, working for years in the area of software engineering, and
doing his Ph.D. thesis now in User Interface research.

--
Joachim

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Joachim Schrod			Email: schrod@iti.informatik.th-darmstadt.de
Computer Science Department
Technical University of Darmstadt, Germany

	``How do we persuade new users that spreading fonts across the page
	like peanut butter across hot toast is not necessarily the route to
	typographic excellence?				-- Peter Flynn


========================================================================
Date:         Tue, 26 May 92 14:16:15 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@DHDURZ1.bitnet>
From: Peter C Olsen <pcolsen@SUPER.ORG>
Subject:      typographic things about TeX that need fixing


"Paul Barton-Davis" writes:
 >
 > ... I have a huge amount of interest in a
 > TeX-compatible tool that makes Mac tools redundant, and would enable
 > me to typeset both the Journal of Complex Systems and Edward Tufte's
 > next book from my workstation.
 >
 > -- paul
 >

I think that this puts the issue precisely.  I write mathematics,
mostly, and I want to be able to "flow" text, do graphics, and make my
papers "look like Newsweek" (or better, Tufte) because I want them to
be *read*.  Graphics and appealing design will get me more readers, so
I want them.  I *love* TeX, and prefer it (by far) to all the
WYSIW(A)YG alternatives I have seen, but I want it better yet.

Peter
Peter Olsen, PE, n2ell, 410-997-8584, PO Box 410, Simpsonville, MD 21150-0410
 pcolsen@super.super.org  ...!uunet!super!pcolsen  (Home: ...!n2ell!pcolsen)
     "Imagination is more important than knowledge" --- Albert Einstein


========================================================================
Date:         Tue, 26 May 92 20:21:59 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@DHDURZ1.bitnet>
From: Joachim Schrod <schrod@iti.informatik.th-darmstadt.de>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <9205261656.AA02095@HP5.ITI.INFORMATIK.TH-DARMSTADT.DE>;
              from"RolfLindgren" at May 26, 92 6:37 pm


You wrote:
>
> Joachim Schrod writes:
>  > added ads until now -- then we would build the egg-laying
>  > whool-giving cow-pig.) Malcolm wants only the latter -- and that's
>
> Could I have that in German, please? What does it mean?

``Eierlegende Wollmilch-Sau.''

A common German term for a system which tries to do everything.

--
Joachim

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Joachim Schrod			Email: schrod@iti.informatik.th-darmstadt.de
Computer Science Department
Technical University of Darmstadt, Germany


========================================================================
Date:         Tue, 26 May 92 21:01:42 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@DHDURZ1.bitnet>
From: Joachim Schrod <schrod@iti.informatik.th-darmstadt.de>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <9205261659.AA02129@HP5.ITI.INFORMATIK.TH-DARMSTADT.DE>;
              from"PaulBarton-Davis" at May 26, 92 9:57 am


Paul wrote:
>
> Joachim Schrod <schrod@ITI.INFORMATIK.TH-DARMSTADT.DE> writes:
>
>    You want
>    something that's able to typeset NewsWeek, i.e. magazines, *and*
>    Books (incl. common types of journals). (I wonder that nobody has
>    added ads until now -- then we would build the egg-laying
>    whool-giving cow-pig.) Malcolm wants only the latter -- and that's
>    clearly the realm of TeX now. I could never understand those people
>    who think that TeX is an appropriate tool for these problems.
>
> I'll try hard not bristle, Joachim :-)
>
> [...]
>
> So, its not impossible for a command-driven markup system to do books,
> magazines and advertisements; its just a major pain.
				^^^^^^^^^^^^^^^^^^^^^^
				!!!!!!!!!!!!!!!!!!!!!!

Exactly. That's what I meant. In another posting you write that you
want something better as some Mac tools. I understood it so, that Mac
tools are better suited for creating ads and so (after all, that's my
opinion, too). Why don't you use them then?
    (I have learned a bit about ads typesetting from Linotype folks.
It was interesting. I cannot imagine (yet?!) a model which enables a
formalization of that and of structured markup a la SGML.)

>     -- Do we talk about a typesetting system?
>
> Primarily yes. I thought that NTS was an acronym for "New TYPESETTING System".

Ah, tr\'es bien. A first vote.
    [Btw, NTS:
	-- New Typesetting System
	-- Next generation TeX System
	-- NTS is not a TeX System
    In Hamburg, where we discussed above this name, even more
    abbrevations came up...]

>     -- Do we talk about the functionality of an author system?
>
> As an ancillary function, of course.

> Lovely. Instead of castigating those of us with similar background and
> similar interests, how about telling us *specifically* what you'd
> like NTS to look like ?

If you have a similar background and similar interests, and if you
were under those who did concentrate on one topic (and if you made
clear in which context you addressed it, as you said) -- why do you
exaggerate now? `Beaten dogs shout?' I hope, not.

Look, eg, this WYSIWYG stuff. I have sent 10 articles to
comp.text.tex in the last six months which explained the difference
between a WYSIWYG and a DMP system. That a WIMP user interface (for
those afraid of asking me: WIMP means Windows, Icon, Menus, Pointer)
with direct feedback (the NERD principle: Navigation, Evaluation,
Refinement, Demonstration) is not identical with a WYSIWYG system.
    That _in_the_context_of_scientific_articles_and_books_, a
graphical user interface for a general markup system is more of use.

> Tell us if you want to retain the boxes & glue model.

Ah, you ask me about a `typesetting' issue!?

> Tell us if you want ever going to allow typographers, people who
> work with visual aspects of a document, to have visual, not
> structured, controls.

Ah, you ask me about a `user interface' issue!?

> Tell us if you want to impose a strict
> separation between document design and authoring.

Ah, you ask me about an `author system' issue!?

Everything at once?
    You haven't understood what I wrote -- obviously I was not clear
enough: I don't want to discuss this alltogether. I don't believe that
we will ever get to some result if we discuss this alltogether.

> Tell us ... you get the picture.

I have told you already -- I would like to know which issue to address
first. I have tried to reiterate my categorization for those who were
not involved in the foundation of this group (the others knew them
already :-)

> For the
> record, I support all of the above things.

To cite you about the `author system' issue: ``As an ancillary
function, of course.''

For the record, my vote: Although all points are of interest, this
point is IMO of the most interest. I want a system which focuses on
authors. I don't need a complete new system. IMO one could start with
the SGML work (ie: I favour structured markup and have a bias for
focusing on structured documents and ignoring ads) and one could see
how the experience can be brought in the TeX community gathered in
the last 14-or-so years. (If I read the discussion in comp.text.sgml I
thing these experiences are needed.)
    That's my vote. If more people want to discuss about a
typesetting system or about the user interface, I'll be fine with it,
too. But, please, not both together; results are needed, not endless
discussions going from one corner to the other.

--
Joachim

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Joachim Schrod			Email: schrod@iti.informatik.th-darmstadt.de
Computer Science Department
Technical University of Darmstadt, Germany

	``How do we persuade new users that spreading fonts across the page
	like peanut butter across hot toast is not necessarily the route to
	typographic excellence?				-- Peter Flynn


========================================================================
Date:         Tue, 26 May 92 12:38:16 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@DHDURZ1.bitnet>
From: "Paul Barton-Davis" <pauld@CS.WASHINGTON.EDU>
Subject:      typographic things about TeX that need fixing
In-Reply-To:  Joachim Schrod's message of Tue,
              26 May 92 21:01:42 MESZ
              <9205261909.AA06038@june.cs.washington.edu>


Last things first:

       That's my vote. If more people want to discuss about a
   typesetting system or about the user interface, I'll be fine with it,
   too. But, please, not both together; results are needed, not endless
   discussions going from one corner to the other.

I absolutely agree. What I'm trying to argue here is that the user
interface is *secondary* to the typesetting system; that is, there are
assumptions about the capabilities of the typesetting system that the
user interface(s) level *must* make; if these assumptions are not
addressed first, we end up with a lousy interface.

   > So, its not impossible for a command-driven markup system to do books,
   > magazines and advertisements; its just a major pain.
				   ^^^^^^^^^^^^^^^^^^^^^^
				   !!!!!!!!!!!!!!!!!!!!!!

   Exactly. That's what I meant. In another posting you write that you
   want something better as some Mac tools. I understood it so, that Mac
   tools are better suited for creating ads and so (after all, that's my
   opinion, too). Why don't you use them then?

Because I think that the markup-driven system is vastly superior. This
is not the time or place to explain why.

					I want a system which focuses on
   authors. I don't need a complete new system. IMO one could start with
   the SGML work (ie: I favour structured markup and have a bias for
   focusing on structured documents and ignoring ads)

I think you're wrong here. I believe that any sufficiently powerful
typesetting system would contain SGML as a subset. SGML offers nothing
to those of us who consider "digital or computer-driven typesetting"
to cover the entire field of putting ink on paper (or making
phosphorus glow, for that matter). SGML also says *nothing* about
mechanism. It is fascinating from a user-interface level, but tells us
nothing about what any system that can support it must be able to do.

       (I have learned a bit about ads typesetting from Linotype folks.
   It was interesting. I cannot imagine (yet?!) a model which enables a
   formalization of that and of structured markup a la SGML.)

That's too bad. I can. I've also tried to make a start at describing it.

   >     -- Do we talk about a typesetting system?
   >

Since there are a number of things that people significantly invovled
with TeX have identified as desirable but non-existent or for
practical purposes (time, memory, disk space etc) impossible in TeX, I
presume that we *must* talk about this.

   >     -- Do we talk about the functionality of an author system?
   >
   > As an ancillary function, of course.

By which of course I meant: an authoring system presumes the existence
of a system to transform a document into something readable (a
typesetting system). Whether or not the authoring system is part of
the typesetter (Mac tools) , or quite separate from it (TeX), or
tighly coupled (???), is, IMHO, quite independent of the existence of
the typesetting system itself.

   Look, eg, this WYSIWYG stuff. I have sent 10 articles to
   comp.text.tex in the last six months which explained the difference
   between a WYSIWYG and a DMP system. That a WIMP user interface (for
   those afraid of asking me: WIMP means Windows, Icon, Menus, Pointer)
   with direct feedback (the NERD principle: Navigation, Evaluation,
   Refinement, Demonstration) is not identical with a WYSIWYG system.

Fine. I understand all this, and have read your articles. I agree with
most, if not all of what you have said there.

       That _in_the_context_of_scientific_articles_and_books_, a
   graphical user interface for a general markup system is more of use.

If _the_context_of_scientific_articles_and_books_ is all that NTS is
going to address, then I'm afraid that I have no interest in NTS.
There is absolutely no reason why after more than 20 years of
experimenting with computer driven typography, we do not yet have a
system with TeX's elegance and power but the generality of a Mac-type
tool.

However, this is not to disagree that "a graphical user interface for
a general markup system is more of use". However, given that such
things have been built around TeX (and related tools) already, I don't
see this as the core of what NTS (whatever the hell it stands for)
should be about.

The first questions that Knuth had to answer were of the form:

	1) whats the basic computational model for setting type on a
		page ?
	2) what controls over this process are needed ?

Then, and ONLY then, does it make sense to ask:

	3) what kind of user-interface should the system have ?


-- paul


========================================================================
Date:         Tue, 26 May 92 21:59:33 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@DHDURZ1.bitnet>
From: Joachim Schrod <schrod@iti.informatik.th-darmstadt.de>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <9205261941.AA02478@HP5.ITI.INFORMATIK.TH-DARMSTADT.DE>;
              from"PaulBarton-Davis" at May 26, 92 12:38 pm


You wrote:
>
> The first questions that Knuth had to answer were of the form:
>
> 	1) whats the basic computational model for setting type on a
> 		page ?
> 	2) what controls over this process are needed ?
>
> Then, and ONLY then, does it make sense to ask:
>
> 	3) what kind of user-interface should the system have ?

I could not agree more. But (taking the risk to reiterate myself): The
questions in advance

       -1) who are the users of such a system ?
		authors or typesetters?
	0) what are the requirements of these users ?

are missing in your list. Their answers were easy for DEK: the user?
himself. The requirements? `to typeset TAoCP'. (full stop).
    I do not think that it is so easy now. Therefore: I would like to
see these points addressed first, ie., addressing usefulness before
adressing a computational model or a user interface. That's my
attitude as a professional creating software. Then my personal opinion
(or bias if you like) comes into play: Authors are more of interest to
me than typesetters.


Oh yes, and I know that SGML is not enough for an author system. I
mentioned it because I wanted to point out, that there are
modells/kernels around which might be used and which should be put
into a new environment. I don't want to start on the green grass,
that's not my way. I don't agree with you that it's enough that some
(expensive) SGML environments exist. DEKs work was not really new
either at his time, he just used standard techniques. But he did it
right. See my (ironical) answer to Nico's posting on my (sad) feelings
about the state of the SGML affair.

'nuff said, 10pm -- back to work...

--
Joachim


========================================================================
Date:         Wed, 27 May 92 16:33:43 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Anthony Shipman <als@bohra.cpg.oz.au>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <199205262002.AA20183@yarra.pyramid.com.au>; from "Joachim
              Schrod"at May 26, 92 9:59 pm


> questions in advance
>
>        -1) who are the users of such a system ?
> 		authors or typesetters?
> 	0) what are the requirements of these users ?
>

Can we have a definition of these terms.

I expect "author" is an end user writing a document.

What is a typesetter?  In the current TeX would that be someone preparing
a macro set or document style for authors to use?

Should we differentiate between a user interface for an author and a user
interface for a typesetter in our thinking?  Maybe they are the same, maybe
not.



--
Anthony Shipman                 "You've got to be taught before it's too late,
CP Software Export Pty Ltd,      Before you are six or seven or eight,
19 Cato St., East Hawthorn,      To hate all the people your relatives hate,
Melbourne, Australia, 3121       You've got to be carefully taught."  R&H

E-mail: als@bohra.cpg.oz.au


========================================================================
Date:         Wed, 27 May 92 09:06:04 MDT
Reply-To: "Erik-Jan Vens" <E.J.Vens@icce.rug.nl>
From: "Erik-Jan Vens" <erikjan@icce.rug.nl>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <01GKHEE2ESQK8WWC91@RUGR86.RUG.NL>; from "Paul Barton-Davis" at
              May 26, 92 9:57 am


Paul Barton-Davis dixit:
[...]
> As an ancillary function, of course. I have long advocated something
> that sounds a bit like what Griff is - visual design for typographers;
> structured markup ala SGML for authors. This has the benefit of making
> zillions of tools already out there available for authors, and
> minimizing the fool-proofness of the visual interface.

Can someone fill me in on "Griff"? Some others have mentioned this
(him?/her?/it?) as well.

EJee.

--

Erik-Jan Vens.  E.J.Vens@icce.rug.nl


========================================================================
Date:         Wed, 27 May 92 11:10:11 BST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Timothy Murphy <tim@maths.tcd.ie>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  Erik-Jan Vens's message of Wed, 27 May 92 09:06:04 MDT


> Can someone fill me in on "Griff"? Some others have mentioned this
> (him?/her?/it?) as well.

Grif (only 1 'f') is an 'Editor for Structured Documents'
developed by a small French company, Gipsi.
(They also make or made X terminals.)

Grif was commissioned by EuroMath
to develop a mathematical version of Grif.
This version gives a kind of WYSIWYG LaTeX editor.

(EuroMath is a sort of consortium of European Mathematical Societies.
They got some money from the EC to pay for the Grif work,
which is ongoing.)

Most people who have looked at Grif
are impressed with it.
I'm not; but then I don't believe in NTS either.

Anyone wanting further information on Grif
could contact my colleague Richard Timoney
(richardt@maths.tcd.ie)
who is the Irish representative
(and perhaps secretary or chairman)
of the EuroMath committee overseeing this project.

Timothy Murphy

e-mail: tim@maths.tcd.ie
tel: +353-1-2842366 (home/office)
     +353-1-7021507 (university)
fax: +353-1-2842295
s-mail: School of Mathematics, Trinity College, Dublin 2, Ireland



========================================================================
Date:         Wed, 27 May 92 13:02:31 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Joachim Schrod <schrod@iti.informatik.th-darmstadt.de>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <9205270936.AA03561@hp5.iti.informatik.th-darmstadt.de>;
              from"Erik-Jan Vens" at May 27, 92 9:06 am


Erik-Jan Vens wrote:
>
> Can someone fill me in on "Griff"? Some others have mentioned this
> (him?/her?/it?) as well.

It's named Grif. At the moment I have at hand only one article (but
the HCI bibliography has perhaps more):

@string{ ep        = "Electronic Publishing"}
@article{ui:furuta:grif,
 author = {Richard Furuta and Vincent Quint and Jaques Andr\'e},
 title = {Interactively Editing Structured Documents},
 journal = ep,
 volume = 1,
 number = 1,
 month = apr,
 year = 1988,
 pages = {19-44},
 annote = {
 \cd{} grammatical specification of object relationships for the
interactive manipulation of tree-oriented document structures. System: GRIF.}
}

--
Joachim

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Joachim Schrod			Email: schrod@iti.informatik.th-darmstadt.de
Computer Science Department
Technical University of Darmstadt, Germany

	``How do we persuade new users that spreading fonts across the page
	like peanut butter across hot toast is not necessarily the route to
	typographic excellence?				-- Peter Flynn


========================================================================
Date:         Wed, 27 May 92 13:35:54 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Joachim Schrod <schrod@iti.informatik.th-darmstadt.de>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <9205270756.AA03115@hp5.iti.informatik.th-darmstadt.de>;
              from"Anthony Shipman" at May 27, 92 4:33 pm


You wrote:
>
> > questions in advance
> >
> >        -1) who are the users of such a system ?
> > 		authors or typesetters?
> > 	0) what are the requirements of these users ?
> >
>
> Can we have a definition of these terms.
>
> I expect "author" is an end user writing a document.

Yes.

> What is a typesetter? In the current TeX would that be someone preparing
> a macro set or document style for authors to use?

Hmm, seems that my question was too simple-minded. A little bit more
elaborate (but perhaps still incomplete):

I think, besides the author we have the tasks of

 -- creating the markup structure (in SGML-speak: DTD writing)
 -- creating the layout (usually for more than one book, at least for
    	a DTD, might even be for a category of DTDs. In SGML-speak:
	DSSL writing -- although I don't like DSSL ;-) Please note
	that I think that TeX has its serious limits in exactly this
	area.)
    I would call the person doing such a task a `book designer'.
 -- Interpreting the layout decisions: paragraph and page breaking,
	formula setting, figure placement, rotation, handling of fonts (I
	would like to distinguish types and fonts here), and all the other
	stuff Peter mentioned.
    I would call the person doing such a task a `typesetter'.
	This task is not fully automatable, but one can support it
	mechanically on a high abstraction level.

> Should we differentiate between a user interface for an author and a user
> interface for a typesetter in our thinking?  Maybe they are the same, maybe
> not.

Concerning the user interface I think we need different UIs (at
least) for all four kind of people. But here I agree with Peter that
this is not the most important point at the moment. My disagreement
with him was raised by my impression that he made implicite
assumptions about the requirements and started with design questions
concerning the typesetting task. I demanded a requirements analysis
about the complete problem domain first; I wanted explicite,
documented, assumptions.

I might ask other questions to show my reasoning behind:
    Why are authors using TeX today?
    Why are publishers using TeX today?
    (And please: anecdotes about single people might be interesting
but they are no basis for a discurse. Statistical data is needed.)
    Is it because it's such a great typesetting system?
    Is it because it's (together with all the `ancillary tools') an
author system which is powerful, resonable cheap, available on many
machines, creates (email-)exchangable documents, etc. ?
    What are their problems with the system nowadays?
	That its typesetting capabilities are not powerful enough?
	Missing subtools, ie, missing functionality?
    	Bad introductionary documentation?
	That nobody agrees what TeX really is? (I warn y'all: a pet
		peeve of mine :-)
	Inconsistent behaviour between the subtools?
	Bad user interface?
	Difficult adaptibility for novice users? (especially those who
		have never programmed in Lisp *and* Assembler :-)

Please do not expect to receive answers from me, that's my questions
where I'm looking for answers by myself -- but these questions guide
me in my requirements analysis. I have designed enough software
systems to know that the biggest error one can make is to design a
system which does not address the needs of their potential users --
and that one (astonishly often) does not know who are the potential
users...

--
Joachim

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Joachim Schrod			Email: schrod@iti.informatik.th-darmstadt.de
Computer Science Department
Technical University of Darmstadt, Germany

	``How do we persuade new users that spreading fonts across the page
	like peanut butter across hot toast is not necessarily the route to
	typographic excellence?				-- Peter Flynn


========================================================================
Date:         Wed, 27 May 92 08:53:30 MDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: "Nelson H. F. Beebe" <beebe@MATH.UTAH.EDU>
Subject:      Bibliography of Electronic Publishing journal
In-Reply-To:  Your message of Wed, 27 May 92 13:02:31 MESZ


Since some of you may not have access to the journal Electronic Publishing,
you may wish to look at a bibliography of its contents.  Use anonymous
ftp to ftp.math.utah.edu and look in ~ftp/pub/tex/bib for the files
index and epodd.*.  By e-mail, "send index from ftp/tex/bib" to
tuglib@math.utah.edu.


========================================================================
Nelson H.F. Beebe
Center for Scientific Computing
Department of Mathematics
220 South Physics Building
University of Utah
Salt Lake City, UT 84112
USA
 Tel: (801) 581-5254
 FAX: (801) 581-4148
 Internet: beebe@math.utah.edu
========================================================================


========================================================================
Date:         Wed, 27 May 92 10:34:29 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: "Paul Barton-Davis" <pauld@CS.WASHINGTON.EDU>
Subject:      typographic things about TeX that need fixing
In-Reply-To:  Joachim Schrod's message of Wed,
              27 May 92 13:35:54 MESZ
              <9205271137.AA19013@june.cs.washington.edu>


Joachim Schrod <schrod@ITI.INFORMATIK.TH-DARMSTADT.DE> writes:
   > > questions in advance
   > >
   > >        -1) who are the users of such a system ?
   > > 		authors or typesetters?
   > > 	0) what are the requirements of these users ?
   > >

   Hmm, seems that my question was too simple-minded. A little bit more
   elaborate (but perhaps still incomplete):

   I think, besides the author we have the tasks of

    -- creating the markup structure (in SGML-speak: DTD writing)
    -- creating the layout (usually for more than one book, at least for
	   a DTD, might even be for a category of DTDs. In SGML-speak:
	   DSSL writing -- although I don't like DSSL ;-) Please note
	   that I think that TeX has its serious limits in exactly this
	   area.)
       I would call the person doing such a task a `book designer'.
    -- Interpreting the layout decisions: paragraph and page breaking,
	   formula setting, figure placement, rotation, handling of fonts (I
	   would like to distinguish types and fonts here), and all the other
	   stuff Peter mentioned.
       I would call the person doing such a task a `typesetter'.
	   This task is not fully automatable, but one can support it
	   mechanically on a high abstraction level.

A good list. The only points I would add are:

	- if "typesetting" is not fully automatable, which I don't
	  believe, then what level can it get to ? What exactly are
          the tasks that you think cannot be automated ?

	- the job of the "book designer" ("typographer" would be a
          more generic term, I believe) is made very difficult by
          systems like LaTeX and SGML, because both are predicated on
 	  a categorization and heirarchical breakdown of what is
          (or should be) a gestalt. Consider someone who is working
          on two books, one using the Hughes "STOP" format and the
          other Addison-Wesley or Springer Verlag's internal house style.

	  In both cases, she will find conceptual aspects of the
          layout that do not exist in the other, nor do they have any
          counterpart in the other. There will be markup commands in
          one that simply do not map to the other; does this mean
          that the markup is following the visual logic of the layout,
          or vice versa ?

	  This problem tends to lead to a folding of the two tasks
          you mention (creating the markup structure, and layout design)
  	  into one. Separating them, which I suppose one could argue is
          the goal of those who argue for complete separation of
          the two, denies those doing each task from having the
          freedom to implement their design fully. It might be good for
	  NTS to make such a separation possible, but I do not think it
	  desirable for it to *impose* such a separation.

   Concerning the user interface I think we need different UIs (at
   least) for all four kind of people. But here I agree with Peter that
   this is not the most important point at the moment. My disagreement
   with him was raised by my impression that he made implicite

I think that your disagreement was with me, not Peter :-)

   assumptions about the requirements and started with design questions
   concerning the typesetting task. I demanded a requirements analysis
   about the complete problem domain first; I wanted explicite,
   documented, assumptions.

   I might ask other questions to show my reasoning behind:
       Why are authors using TeX today?
       Why are publishers using TeX today?
       (And please: anecdotes about single people might be interesting
   but they are no basis for a discurse. Statistical data is needed.)

There are so few publishers doing so that you *cannot* collect
meaningful statistical data on this. My contact with those that do
suggests that it is driven by personal whim than by any aggregate
ideas about TeX, computers and typesetting.

	[ ... ]

   Please do not expect to receive answers from me, that's my questions
   where I'm looking for answers by myself -- but these questions guide
   me in my requirements analysis. I have designed enough software
   systems to know that the biggest error one can make is to design a
   system which does not address the needs of their potential users --
   and that one (astonishly often) does not know who are the potential
   users...

I start from a different premise, one that does not assume computers
at all. I look at what "conventional" typesetters, typographers, type
designers, and illustrators do, and see *their work* as the problem
domain. I then make the additional assumption that what I want to see
is a system that allows a single person to *potentially* control all of
these aspects of document production, in addition to the act of
authoring, from a single access point (a computer system).

Such a consideration leads me to believe that a system of layered
access, with multiple entry points, is needed. That is, the system
must offer, ala hypercard, an "authoring only" view of the world. The
system must offer a "layout designer" view of the world. The system
must offer a "typesetter" view of the world. Each of these needs to
accessed independently; in addition, it might be desirable for some
aspects of each world to be accessible under some conditions from the
others.

This breakdown allows me to consider the needs of authors quite
independently of what I believe typographers need. It allows me to
consider questions about typesetting methodology quite independently
of any particular assumptions about visual appearance or document
structure. In short, I model my inquiry into these questions on the
pre-computer methods of document production.

-- paul


========================================================================
Date:         Wed, 27 May 92 20:40:11 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Joachim Schrod <schrod@iti.informatik.th-darmstadt.de>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <9205271736.AA05203@hp5.iti.informatik.th-darmstadt.de>; from
              "PaulBarton-Davis" at May 27, 92 10:34 am


Paul wrote a long mail where he explained that he did not understood
me. He put implications in my points which were never there. I
shuffel around his comments now, and that's the last time; I'm tired
of writing the same all the time.

I wrote that we must distinguish the four _tasks_: authoring, setting
up a structure, book design, and typesetting.

He replied

> 	  This problem tends to lead to a folding of the two tasks
>           you mention (creating the markup structure, and layout design)
>   	  into one. Separating them, which I suppose one could argue is
>           the goal of those who argue for complete separation of
>           the two, denies those doing each task from having the
>           freedom to implement their design fully.

Please note: this is not my opinion, neither the folding nor the
separation. I never said that these tasks are *separated*, they are
to be distinguished. Because they are different abstractions. That
they are highly correlated, should be clear. You even forgot to
mention the most important connection: BETWEEN THE AUTHOR'S TEXT AND
THE LAYOUT!! A really good layout is not only influenced by the
structure -- it depends on the content!!

If you really have put effort in research about typesetting, you know
this. I first learned it more than 10 years ago when I worked with a
book for typesetters' apprentices: J.K\"aufer, _Das_Setzerlehrbuch_,
Stuttgart: Blersch, 1965. It's a book about metal typesetting where
one can read all the quality demands which are not obeyed today.
Philip Luidl has also written a very good book on typography and book
design. Not to mention the classics cited everywhere: Morris,
Tschichold, etc.
    Where one can also learn alot is the competition about the `Best
Books of The Year.' But not only from those which won -- those which
were rejected are even better. One can look *why* they were rejected,
one can study the guidelines -- and then one discovers that good book
design and typesetting is more than putting a structure in a layout.

And since nobody has shown me yet an AI who can understand the content
of a text and since I know nobody who would mark **ALL** content
which is needed for Good Typesetting based on marked structure, I'm
still with my sentence:

> 	   This task is not fully automatable, but one can support it
> 	   mechanically on a high abstraction level.

Where you replied:

> 	- if "typesetting" is not fully automatable, which I don't
> 	  believe,

You really think that an author will mark where his central thesis
is, so that the system will know that a page break is not allowed
there? You really believe that the question if narrow typesetting or
hyphenation is more important _in_the_semantic_context_ of the
respective text part can be answered automatically? How many authors
did you met which mark the places where they have abbrevations which
are followed by a word belonging to that abbrevation differently from
abbrevations where no accompanying word follows (the space afterwards
must be different!)?
    Oh, where are the times, when George Bernhard Shaw did not put a
book into print because the layout did not support his content? Where
an author was still interested how his book will look -- but where he
would had never dreamed of typesetting it by himself? (He knew that
he's not a professional in this area. He valued human expertise.)

In short: There will always be the place for a trained _human_
typesetter who knows what he does -- who knows when to apply rules
AND WHEN TO BREAK THEM. That's a decision which I will not see given
over to a computer system. That's art, not technic.
    Of course, there will be the mass production where it obviously
does not matter how the layout is done -- but when we talk about
`automatation' then it's a principle question.

> 	- the job of the "book designer" ("typographer" would be a
>           more generic term, I believe)

Yes, that's the reason I didn't use it. Here in Germany, a typographer
does also create typefaces.

> I start from a different premise, one that does not assume computers
> at all.

I haven't talked of computers yet. I talked about people and there
demands. Please stop putting those words in my mouth.

>    I look at what "conventional" typesetters, typographers, type
> designers, and illustrators do, and see *their work* as the problem
> domain. I then make the additional assumption that what I want to see
> is a system that allows a single person to *potentially* control all of
> these aspects of document production, in addition to the act of
> authoring, from a single access point (a computer system).

See -- that's the difference. You start with typesetters, [...] and
then the author comes into play. I ask `where shall we start?'. I ask
`is this really the right place?'. I question your start and I still
say that you have an implicite assumption: That's it's best to start
there. My unanswered question is: `why?'.

Btw, wasn't it you, who said that box&glue do not resemble anything
in "conventional" typesetting? If no, ok. If yes, have you ever
worked with REAL types, I mean, made your fingers dirty with metal?
To the person who wrote this whoever he/she is: There you learn about
boxes and (horizontal) glue. Only that the `glue' is of metal (these
`Spreizklammern,' don't know the English word for them).

>        Why are publishers using TeX today?
>
> There are so few publishers doing so that you *cannot* collect
> meaningful statistical data on this. My contact with those that do
> suggests that it is driven by personal whim than by any aggregate
> ideas about TeX, computers and typesetting.

My contact with them (ie: I've worked as a TeX consultant for several
publisher houses) do suggest that it is driven not by personal whim
but by authors' questions like `why can't we send you TeX
compuscripts?'. IMO authors pushed TeX into the business. I have yet
to meet a publisher house which stands full behind TeX -- and I
understand them. The people who think TeX makes the whole process
cheaper, are dreamers. TeX might make it faster, that's perhaps a
reason for journal production, but cheaper? No, Hongkong and other
Asian states are cheaper. (At least cheaper as German publishers...)

> In short, I model my inquiry into these questions on the
> pre-computer methods of document production.

And then you want to get rid of typesetters (``It's fully
automatable.'')? I cannot believe it.

--
Joachim


PS: We have hardware problems at the moment. The NTS-L archive on
    ftp.th-darmstadt.de is not reachable. Probably it will be Friday
    'till it's up again. Sorry for the inconvenience.


========================================================================
Date:         Wed, 27 May 92 12:15:20 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: "Paul Barton-Davis" <pauld@CS.WASHINGTON.EDU>
Subject:      typographic things about TeX that need fixing
In-Reply-To:  Joachim Schrod's message of Wed,
              27 May 92 20:40:11 MESZ
              <9205271842.AA08789@june.cs.washington.edu>


[ I really am dismayed about the way that Joachim seems to be taking
  my mail as as series of personal attacks on him and his ideas. He
  seems not to realize that (1) I have a great deal of respect for
  his ideas and his work, and that (2) we come at this topic from different
  directions, which inevitably leads to disagreements over what's
  important.

  I would appreciate it if Joachim would stop assuming that I do not
  understand him and am putting implications into his words that are
  not there. I would find it easier to conduct an enquiry into this
  sort of thing if the participants assumed that honest disagreement,
  not stupidity and deliberate distortion, were at the root of
  the debate. If Joachim thinks that my postings show sufficient stupidity
  as to not merit a reply, then fine. We'll talk more later.
 ]

Joachim writes:
   Paul writes:

   > 	  This problem tends to lead to a folding of the two tasks
   >           you mention (creating the markup structure, and layout design)
   >   	  into one. Separating them, which I suppose one could argue is
   >           the goal of those who argue for complete separation of
   >           the two, denies those doing each task from having the
   >           freedom to implement their design fully.

   Please note: this is not my opinion, neither the folding nor the
   separation. I never said that these tasks are *separated*, they are
   to be distinguished. Because they are different abstractions. That
   they are highly correlated, should be clear. You even forgot to
   mention the most important connection: BETWEEN THE AUTHOR'S TEXT AND
   THE LAYOUT!! A really good layout is not only influenced by the
   structure -- it depends on the content!!

I can show you a dozen books in which your claim is absolutely false,
a dozen in which it is absolutely true (I already cited Tufte), and
many more in which things are not so obvious.

You claim that layout design and markup design are two different
abstractions, but highly correlated. I claim that in the general case,
the degree of correlation is too high to distinguish the abstractions.
I might agree with you in the limited domain of "scientific and
mathematical publishing", but as I've stated before, I see this as an
unnecessarily restrictive domain.

   > 	- if "typesetting" is not fully automatable, which I don't
   > 	  believe,

   You really think that an author will mark where his central thesis
   is, so that the system will know that a page break is not allowed
   there?

Thank you. You have clarified what you mean by automatable. Given this
definition, I agree with you.

   > 	- the job of the "book designer" ("typographer" would be a
   >           more generic term, I believe)

   Yes, that's the reason I didn't use it. Here in Germany, a typographer
   does also create typefaces.

In England and the US, I believe this is the job of a type designer,
who might also work as a typographer. Thats certainly the distinction
made in Carter's "Twentieth Century Type Designers" (Trefoil Design
Library, 1986).

   >    I look at what "conventional" typesetters, typographers, type
   > designers, and illustrators do, and see *their work* as the problem
   > domain. I then make the additional assumption that what I want to see
   > is a system that allows a single person to *potentially* control all of
   > these aspects of document production, in addition to the act of
   > authoring, from a single access point (a computer system).

   See -- that's the difference. You start with typesetters, [...] and
   then the author comes into play. I ask `where shall we start?'. I ask
   `is this really the right place?'. I question your start and I still
   say that you have an implicite assumption: That's it's best to start
   there. My unanswered question is: `why?'.

See my closing paragraph.

   Btw, wasn't it you, who said that box&glue do not resemble anything
   in "conventional" typesetting? If no, ok.

It wasn't me. I *did* argue that a successor to TeX should use them
only in the context of a more generic model of typesetting operations.

   >        Why are publishers using TeX today?
   >
   > There are so few publishers doing so that you *cannot* collect
   > meaningful statistical data on this. My contact with those that do
   > suggests that it is driven by personal whim than by any aggregate
   > ideas about TeX, computers and typesetting.

   My contact with them (ie: I've worked as a TeX consultant for several
   publisher houses) do suggest that it is driven not by personal whim
   but by authors' questions like `why can't we send you TeX
   compuscripts?'. IMO authors pushed TeX into the business.

Count the authors, Joachim. Count the publishers. I challenge you to
find more than 50 authors and more than 20 publishers. Neither of
these numbers represent "statistical data", IMHO - in each case, a
specific individual with a specific background decided for some reason
to use TeX. I don't believe that there are enough people doing this to
somehow make statistical inferences from their usage.

   > In short, I model my inquiry into these questions on the
   > pre-computer methods of document production.

   And then you want to get rid of typesetters (``It's fully
   automatable.'')? I cannot believe it.

\begin{core-statement-of-belief}
I have the same goal as I believe Knuth did - to sufficiently
encapsulate the mechanical, non-concious skills of a typesetter into a
computer system, such that a person with sufficent aesthetic skill can
use that system to produce outstanding documents of any sort.  I do
not care that much about authors, because I believe that most authors
have perfectly adequate tools for *authoring*. The inadequacies are in
the tools available for document production. That is not the job of an
author because authors *write*, and *writing* is not the same as
producing documents. My interest in authors comes into existence
simply because I would *like* authors to use this system to do their
writing with.
\end{core-statement-of-belief}

-- paul


========================================================================
Date:         Wed, 27 May 92 21:32:51 BST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Timothy Murphy <tim@maths.tcd.ie>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  Paul Barton-Davis's message of Wed, 27 May 92 12:15:20 -0700


> Count the authors, Joachim. Count the publishers. I challenge you to
> find more than 50 authors and more than 20 publishers. Neither of
> these numbers represent "statistical data", IMHO - in each case, a
> specific individual with a specific background decided for some reason
> to use TeX. I don't believe that there are enough people doing this to
> somehow make statistical inferences from their usage.

On a quick look round our Hamilton Mathematics Research Library
I estimate we have over 1000 books printed in TeX.
Over half the new mathematics books coming in
are printed in TeX.
Virtually all mathematical publishers seem to be using TeX.
I 'challenge' you to tell me one mathematical publisher
who is _not_ using TeX.

Timothy Murphy

e-mail: tim@maths.tcd.ie
tel: +353-1-2842366 (home/office)
     +353-1-7021507 (university)
fax: +353-1-2842295
s-mail: School of Mathematics, Trinity College, Dublin 2, Ireland



========================================================================
Date:         Wed, 27 May 92 21:32:51 BST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Timothy Murphy <tim@maths.tcd.ie>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  Paul Barton-Davis's message of Wed, 27 May 92 12:15:20 -0700


> Count the authors, Joachim. Count the publishers. I challenge you to
> find more than 50 authors and more than 20 publishers. Neither of
> these numbers represent "statistical data", IMHO - in each case, a
> specific individual with a specific background decided for some reason
> to use TeX. I don't believe that there are enough people doing this to
> somehow make statistical inferences from their usage.

On a quick look round our Hamilton Mathematics Research Library
I estimate we have over 1000 books printed in TeX.
Over half the new mathematics books coming in
are printed in TeX.
Virtually all mathematical publishers seem to be using TeX.
I 'challenge' you to tell me one mathematical publisher
who is _not_ using TeX.

Timothy Murphy

e-mail: tim@maths.tcd.ie
tel: +353-1-2842366 (home/office)
     +353-1-7021507 (university)
fax: +353-1-2842295
s-mail: School of Mathematics, Trinity College, Dublin 2, Ireland



========================================================================
Date:         Wed, 27 May 92 14:02:18 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: "Paul Barton-Davis" <pauld@CS.WASHINGTON.EDU>
Subject:      typographic things about TeX that need fixing
In-Reply-To:  Timothy Murphy's message of Wed,
              27 May 92 21:32:51 BST
              <9205272058.AA20401@june.cs.washington.edu>


Tim Murphy writes:
   On a quick look round our Hamilton Mathematics Research Library
   I estimate we have over 1000 books printed in TeX.
   Over half the new mathematics books coming in
   are printed in TeX.
   Virtually all mathematical publishers seem to be using TeX.
   I 'challenge' you to tell me one mathematical publisher
   who is _not_ using TeX.

This is where I bow in deference to my obvious mis-location. I did not
consider the domain of mathematical publishing to be that large. If
there are really that many books published using TeX, then Joachim's
question seems reasonable.

I'm sorry - I just tried not to look only at math publishing, and
other than a few token CS textbooks, TeX is rare, and getting rarer.

-- paul



========================================================================
Date:         Wed, 27 May 92 21:32:51 BST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Timothy Murphy <tim@maths.tcd.ie>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  Paul Barton-Davis's message of Wed, 27 May 92 12:15:20 -0700


> Count the authors, Joachim. Count the publishers. I challenge you to
> find more than 50 authors and more than 20 publishers. Neither of
> these numbers represent "statistical data", IMHO - in each case, a
> specific individual with a specific background decided for some reason
> to use TeX. I don't believe that there are enough people doing this to
> somehow make statistical inferences from their usage.

On a quick look round our Hamilton Mathematics Research Library
I estimate we have over 1000 books printed in TeX.
Over half the new mathematics books coming in
are printed in TeX.
Virtually all mathematical publishers seem to be using TeX.
I 'challenge' you to tell me one mathematical publisher
who is _not_ using TeX.

Timothy Murphy

e-mail: tim@maths.tcd.ie
tel: +353-1-2842366 (home/office)
     +353-1-7021507 (university)
fax: +353-1-2842295
s-mail: School of Mathematics, Trinity College, Dublin 2, Ireland



========================================================================
Date:         Thu, 28 May 92 12:15:33 EDT
Reply-To: karl@cs.umb.edu
From: Karl Berry <karl@CS.UMB.EDU>
Subject:      this list


It seems to me that NTS-L can be discussing one of two things:

1) an extension of TeX;
2) an entirely new typesetting system.

In summary, I think we should be talking about #1, and not even thinking
about #2.

In more detail, although in principle I agree that perhaps an entirely
new system would be better, I don't think a large mailing list like this
is the place to discuss it, or develop it.

I think only an individual or perhaps a small group can profitably
develop such a thing; there are too many thousands of details that a
physically far-flung mailing list can haggle about for anything ever to
get done.  Let someone who has a year or more of research time, some
kind of funding support, and an interest in the subject come up with the
basic system, and then maybe other people can usefully criticize it.
(No, I don't think a big list can come up with the basic outlines of
such a system.)

As things stand now, there is no system, there isn't even an author.
We're just batting around ideas -- ``hey maybe this feature would be
neat.''  This is not useful, in my (not-so-humble-in-this-case, I guess)
opinion.  It will go on forever, and nothing will ever get done.

What I am interested in, and what perhaps others are interested in, is
extending TeX to repair at least some of its flaws.  I'm not interested
in changing to an SGML-based system, or changing into a total separation
of typesetting commands and text, I'm not interested in making the
programming language be a ``real'' programming language, I'm not
interested in TeX subsuming Metafont or reading TrueType fonts.

(Actually, I am interested in all those things, but I'm not interested
in discussing them in the context of a successor to TeX.)

What I want to discuss are new primitives to add to TeX to fix important
problems.  This is a very limited goal.  Maybe it's not even a useful
goal.  But it's a hell of a lot more realistic than rewriting the thing
from scratch by committee!

Concrete plan of action:
If there is a consensus that we should be talking about only extending
  TeX, then let's do it.
If there is no consensus, but there are people like me who only want to
  talk about extending TeX, then we should form our own discussion,
  limited to that topic.
If there is no consensus, and there are no people like me, I'll
  go away quietly and you can shoot me in the morning :-)

(Deep breath.)

karl@cs.umb.edu


========================================================================
Date:         Thu, 28 May 92 12:43:40 EDT
Reply-To: karl@cs.umb.edu
From: Karl Berry <karl@CS.UMB.EDU>
Subject:      this list
In-Reply-To:  Paul Barton-Davis's message of Thu,
              28 May 92 09:29:33 -0700
              <9205281629.AA05088@stowe.cs.washington.edu>


    Some of us think they are
    sufficiently deep-seated as to require a completely new tool

I know, and I don't necessarily disagree, I just don't want to talk
about it.  This is exactly the discussion I don't want to be involved in
-- I want the discussion to *start* from the assumption that adding some new
primitives and (maybe) changing others is what we want to do.

If you and others want to have the other discussion, about a completely
new system, then that's fine, obviously.  I don't care if NTS-L itself
is your discussion or mine, but I want to decide which it's going to be.


========================================================================
Date:         Thu, 28 May 92 18:08:38 BST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Timothy Murphy <tim@maths.tcd.ie>
Subject:      TeX is perfect
In-Reply-To:  Karl Berry's message of Thu, 28 May 92 12:15:33 EDT


Lots of things in this world are perfect:
bicycles, fudge, Mozart's clarinet concerto.

TeX belongs in this class, IMHO.
It is perfect {\em at what it is supposed to do}.
It wasn't designed for printing Newsweek.
It was designed for printing mathematics.



Timothy Murphy

e-mail: tim@maths.tcd.ie
tel: +353-1-2842366 (home/office)
     +353-1-7021507 (university)
fax: +353-1-2842295
s-mail: School of Mathematics, Trinity College, Dublin 2, Ireland



========================================================================
Date:         Thu, 28 May 92 13:58:07 EDT
Reply-To: karl@cs.umb.edu
From: Karl Berry <karl@CS.UMB.EDU>
Subject:      TeX is perfect
In-Reply-To:  Timothy Murphy's message of Thu,
              28 May 92 18:08:38 BST <199205281750.AA08790@cs.umb.edu>


    [TeX] is perfect {\em at what it is supposed to do}.
    It wasn't designed for printing Newsweek.
    It was designed for printing mathematics.

Well, if enough people feel like this, then any changed TeX will not
be widely adopted, and will probably wither and die.  But this is no
reason not to consider improvements (among those of us who want to do so).

karl@cs.umb.edu


========================================================================
Date:         Thu, 28 May 92 13:49:19 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Chris Carruthers <CJC@ACADVM1.UOTTAWA.CA>
Subject:      What should we discuss?
In-Reply-To:  Message of Thu, 28 May 92 12:43:40 EDT from <karl@CS.UMB.EDU>


I agree with Karl Berry that we should be either discussing extensions
to TeX or a completely new system.  I further propose that we must only
discuss one thing at a time and stop every once and a while to catch our
breath and summarize what has been agreed.  The recent discussions between
pd and js have been exhausting and did not seem to achieve anything
(if one of you cares to make a summary of what you did achieve....)
It also seems clear that the first thing we should discuss is *whether*
to discuss extensions or a new system.

I vote for extensions...TeX already does so many things very well
I can't imagine wanting to start from scratch.
This may be a matter of semantics though: one person's extension
is another person's new system...

.Chris Carruthers, Informatics Product Support, Univ. of Ottawa, Ottawa, CA


========================================================================
Date:         Thu, 28 May 92 11:28:11 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: "Paul Barton-Davis" <pauld@CS.WASHINGTON.EDU>
Subject:      bye


I suspect that any further input from me is only going to offend
and/or upset many people. I hope one day to offer you all a system
embodies my (and many other people's) ideas, and one that will
continue to typeset TeX documents as well as they have always been
done. I had hoped that this list might be a good forum for discussing
the fundamentals of a computer typesetting system, using the lessons
learned from TeX, troff, Scribe, Interleaf, Xpress, and others as
examples. It appears instead that more people want to talk about
"fixing TeX". In the meantime, I wish those who work on NTS good luck,
and happy discussions.

-- paul

ps. for those who wondered what Joachim & I achieved by consuming all
    those net cycles: not much, except that I'm more convinced than I
    was that he's attacking things from the wrong end, and I'll bet
    he's more convinced than ever that I'm an idiot.


========================================================================
Date:         Thu, 28 May 92 14:14:03 EDT
Reply-To: karl@cs.umb.edu
From: Karl Berry <karl@CS.UMB.EDU>
Subject:      What should we discuss?
In-Reply-To:  Chris Carruthers's message of Thu,
              28 May 92 13:49:19 EDT <199205281804.AA08956@cs.umb.edu>


    I vote for extensions...TeX already does so many things very well
    I can't imagine wanting to start from scratch.

I don't suggest a vote for decisions like this; I think they should be
made by consensus.

So far no one has dissented from my original idea, which was to have the
NTS-L list discuss extending TeX (as little as possible, presumably), as
it is, and don't even think about entirely new systems.

Does anyone, in fact, disagree?  There is no need to explicitly agree.


========================================================================
Date:         Thu, 28 May 92 20:07:53 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Michael Barr <barr@TRIPLES.MATH.MCGILL.CA>
Subject:      TeX is not perfect!


Not only is TeX lousy at commutative diagrams, but half the latest
tugboat consists of long articles about how to make it do perfectly
reasonable things that can only be done with subtle and difficult
programming.  Actually, they are mostly about how to make a programming
language out of Tex.  I don't know what DEK's reasons for refusing to
make a programming language, but I can't imagine that they are valid
today.  (I put in the time qualifier because they may have had a lot
to do with limited computing power.)  One article had a piece of code
with fifteen (15) \expandafter's in a row!  Something's wrong somewhere.

Michael Barr


========================================================================
Date:         Thu, 28 May 92 21:15:35 MESZ
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Joachim Schrod <schrod@iti.informatik.th-darmstadt.de>
Subject:      Re: typographic things about TeX that need fixing
In-Reply-To:  <9205271917.AA05414@hp5.iti.informatik.th-darmstadt.de>; from
              "PaulBarton-Davis" at May 27, 92 12:15 pm


Paul wrote:
>
> [ I really am dismayed about the way that Joachim seems to be taking
>   my mail as as series of personal attacks on him and his ideas.

You have an false impression -- I do not see them as personal attacks.
I've the opinion that you don't know how TeX is used and that your
implicite assumptions must be questioned.

This is clearly shown by your quote:

> Count the authors, Joachim. Count the publishers. I challenge you to
> find more than 50 authors and more than 20 publishers.

Alone at my university about 5000 people are using TeX -- and more
than 50 of them are writing books with it... But to cite the
authoritives :-):

	``The bibliography project [...] [collecting references to
	publications about or with TeX] continues to grow, with some
	collections receiving several updates a week. There are now
	over 51000 lines in the bibliography files. [...]
	    Conversations that I had with representatives of several
	publishers at the TUG91 and EuroTeX91 meetings this year
	indicate that there may be another 1000-2000 books typeset by
	TeX that have not yet been included.''
		Nelson H. F. Beebe: ``President's Column.'' TUGboat
		Vol. 13, No. 1, April 1992. [received today]

Your statement shows clearly that you are not in contact with those
who use TeX. Go to a TeX conference and talk with the people there.

If TeX were used only by 50 authors and 20 publishers we would not
discuss here. We're not children who are looking for a personal
playground.

--
Joachim


========================================================================
Date:         Thu, 28 May 92 17:26:08 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Mark Steinberger <mark@STAT.ALBANY.EDU>
Subject:      Re:  TeX is perfect



Timothy Murphy writes

>Lots of things in this world are perfect: ...

>TeX belongs in this class, IMHO.
>It is perfect {\em at what it is supposed to do}.
>It wasn't designed for printing Newsweek.
>It was designed for printing mathematics.

I'm a big fan of tex, or I wouldn't be on this list.

But as a practicing mathematician and author, I have to say that tex
is not perfect for printing mathematics.

One of the big gaps in it is its handling of commutative diagrams.

Now there are some very good diagram packages that can be overlaid on
tex, but none of them is perfect. In particular, only one of them, at
this point, has diagonal arrows that aren't at least somewhat dashy,
and that one is impossible to integrate into anyone else's system
without extensive modification.

Also, some further development of curved arrows would be quite useful.
Things like braid diagrams can be set by very few of the available
packages.

There are other modifications that could be useful, but this is the
most important one as far as publishing mathematics is concerned.


--Mark

--------------------------------------------------------------------------
Mark Steinberger       |             mark@sarah.albany.edu
Dept. of Math. & Stat  |
SUNY at Albany         | Nonlinear similarity begins in dimension six.
Albany, NY 12222       |
--------------------------------------------------------------------------


========================================================================
Date:         Fri, 29 May 92 08:35:00 GMT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: malcolm <MALCOLMC@mole.pcl.ac.uk>
Subject:      RE: TeX is perfect


from the discussions i had had with frank mittelbach,
chris rowley, phil taylor et al, and the announcement
which rainer issued, i had thought that it was a new
typesetting system, not a TeX4, or son of TeX that
was being discussed. but things evolve (just like
TeX did).

i'm afraid that almost all the i'm afraid that almost all the
enhancements which i have seen suggested, from those
early ones in TUGboat through to stephan bechtolsheim's
or frank mittelbach's seem, imho, to be examples
of creeping featurism. i have grave doubts as to
whether they are worth the trouble. they certainly are not
to me. in fact, i would class TeX3 as an example of
creeping featurism, even though i am most grateful for
lefthyphenmin and righthyphenmin.

i doubt that even if such tinkering could be achieved successfully,
and as an aside i would note that the relatively modular and
supposedly straightforward changes to create TeX3 took Knuth
rather longer than he expected, would they represent such a
major improvement to encourage all users around the world
to want to upgrade? remember how long it took to get rid
of amr fonts? if it ain't broke....

and then we introduce the spectre of a chain of new TeX's, each
supposedly enhancing the previous one. let's have flow round
arbitrary shapes, let's have new primitives for commutative
diagrams, let's have colour, let's have ....  let's be just like a
commercial product which depends on its survival by adding
new unwanted gimmicks every six months. let's make TeX totally
unwieldy and impossible to run on anything with less
power than a 486dx and 32Mbyte, and oh, it has to work under
windows with hot links.

at the cost of again sounding elitist (which was not my intent, although
i have nothing against elitism), what has this to do with typesetting,
quaility, or excellence?  (maybe i  a little, but i'm writing
an impassioned plea here).

on the other hand, i have to admit that tinkering with TeX is probably
do-able, while i have grave doubts that creating a new typesetting system
by a group of interested anarchists is (again i exagerate, and apolgise to
the reasonable men and women of the centre, right and left, in advance).
but i'm not yet detecting a consensus. the only agreement i see so far
is between me and timothy murphy (the last thing i expected! my enthusiasm for
fudge is less: i would susbstitute islay whisky and bowling).

i shall be saying something like this in my forthcoming presidential
column in tugboat (for those who don't know, tugboat is the publication
of the tex users group: read the terms of the groups constitution
sometime: it hardly mentions tex, but says bits about typesetting).

one thing which needs to be answered at some time is 'who benefits'?
nico would have elsevier benefit (i exaggerate again); some would
have notions of excellence and quality as the beneficiary (rather
culture and time bound concepts); will it benefit the great unwashed?
will your average undergraduate/academic/technical writer (or whoever
it is who uses this system) be eager for this better mousetrap: will
he she or it pay for it?

well, good luck. i know that i'm going to do no coding of this,
although i might consider writing my memoirs with nts.

malcolm clark


========================================================================
Date:         Fri, 29 May 92 11:27:57 BST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Timothy Murphy <tim@MATHS.TCD.IE>
Subject:      Re: bye
In-Reply-To:  Paul Barton-Davis's message of Thu, 28 May 92 11:28:11 -0700


> I suspect that any further input from me is only going to offend
> and/or upset many people.

I doubt it.
I enjoyed reading your contributions,
even though I disagreed with you completely.

> ps. for those who wondered what Joachim & I achieved by consuming all
>     those net cycles: not much, except that I'm more convinced than I
>     was that he's attacking things from the wrong end, and I'll bet
>     he's more convinced than ever that I'm an idiot.

These are not necessarily incompatible :-)

Timothy Murphy

e-mail: tim@maths.tcd.ie
tel: +353-1-2842366 (home/office)
     +353-1-7021507 (university)
fax: +353-1-2842295
s-mail: School of Mathematics, Trinity College, Dublin 2, Ireland



========================================================================
Date:         Fri, 29 May 92 12:23:18 BST
Reply-To: RHBNC Philip Taylor <P.Taylor@Vax.Rhbnc.Ac.Uk>
From: CHAA006@VAX.RHBNC.AC.UK
Subject:      Re: What should this list discuss? (Karl Berry)


Karl wrote:

>>> So far no one has dissented from my original idea, which was to have the
>>> NTS-L list discuss extending TeX (as little as possible, presumably), as
>>> it is, and don't even think about entirely new systems.

>>> Does anyone, in fact, disagree?  There is no need to explicitly agree.

Yes, I disagree.  Not because I don't think that a slightly-extended TeX might
not be a good idea (it may well be the best idea, but equally well it may not:
as Rainer outlined in his `Welcome' message, there are at least five options,
all of which are valid topics for this list), but because there are rather too
many attempts at the moment to control the discussion on this list.  The list
was created under the aegis of Rainer Schoepf, and it is for him to decide what
are, and what are not, relevant topics for discussion.  In the absence of
further guidance from Rainer, I think it ill behoves any of us to seek to
dominate the list by our own personal preferences.  Let us instead listen
politely to what others have to say, and contribute according to our own
lights.

					Philip Taylor, RHBNC


========================================================================
Date:         Fri, 29 May 92 10:45:00 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: LMLARS01%ULKYVX.bitnet@vm.urz.Uni-Heidelberg.de
Subject:      Re:  TeX is perfect


As one who has been using TeX seriously for four or five years, I can say that
TeX is looking far less perfect as time goes by. I use a Macintosh for all of
my writing and I can see that the word processors on the Mac (and presumably
now for Windows) solve many of the problems that I have with TeX very
elegantly. In fact, unless I need portability, or I am writing a long document,
I rarely use TeX for mathematical writing. Here are some reasons why:

(1) Graphics are a pain to use with TeX. My word processors of choice on the
Mac are FullWrite and MathWriter 2.0. With either one I can take graphics out
of nearly any program, paste it in and drag it around the page, make it move
with the text or treat it as a character--my choice. Using Textures or OzTeX, I
always end up fussing for too long to get exactly what I want. Then I lose
portability because somebody else's dvi driver doesn't understand the syntax or
format for graphics--even eps, which is fast becoming an international
standard.

(2) Perhaps it's a matter of taste, but I find the programming language for TeX
to be extremely non-transparent. This would be all right if one could do
serious writing in TeX without ever brushing up against the guts of the system.
But, I know no heavy user of TeX who hasn't had to resort to dirty tricks or
wizardry a few times. I can write (in WYSIAWYG) just about anything TeX can do
with MathWriter and I rarely ever need the manual. With TeX, I always have
Knuth's Old Testament and Lamport's New Testament at my elbow. Right now, TeX
has the advantage in portability and for long documents. But, this advantage is
shrinking fast.

I think both of the above criticisms betray TeX's earliest origins in the
computer-expensive mainframe world of the  1970's. Graphics displays were
expensive and tty terminals were the norm. So, TeX was saddled with basically
no graphics support, ASCII characters for input (I know this can be altered--I
do it for \le, \ge, etc. to see the real thing.) and a programming language not
amenable to occasional or casual acquaintance. TeX needs to be updated to
reflect the changes in the times. Powerful graphic computers are inexpensive
now. Much research has gone into user interfaces, portability of graphics and
programming languages since TeX was conceived.

After all of this, let me finish by saying I like TeX. I have seen no better
tool for the preparation of long mathematical manuscripts. But, it is certainly
not perfect!

=============================================================================
Lee Larson                                     lmlars01@ulkyvx.louisville.edu
Department of Mathematics                                       (502)588-6826
University of Louisville
Louisville, Kentucky 40292 USA



========================================================================
Date:         Fri, 29 May 92 10:34:08 -0600
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: "Jonathan M. Gilligan" <jongill@lilac.csd.bldrdoc.gov>
Subject:      TeX is perfect
In-Reply-To:  LMLARS01%ULKYVX.BITNET@vm.gmd.de's message of Fri,
              29 May 92 10:45:00 EST <9205291502.AA17150@lilac.csd.bldrdoc.gov>


Lee Larson writes that he finds TeX increasingly anachronistic in the face
of fancy WSIWYG word processors. I disagree completely. I don't want to
start a flame war, but I do want to distinguish

a) word-processing from typesetting

b) logical vs. visual composition

c) the comparative advantages and disadvantages of WSIWYG vs. straight text
   for ease of entering the document into the computer and editing it.

Rather than rehash arguments we've all seen before, saying that my
preferences are morally superior to Lee's, I'll just say that I prefer
LaTeX over Word for Windows, Word for Dos, or Word Perfect. I'm agnostic
about MacIntosh software.

There _are_ many features that current commercial word-processing and
typesetting programs have that I wish TeX had
(\include creeping.features) but when I try to use the aforementioned
commercial word-processors (I have no experience with typesetting
software other than TeX) I miss the sense of logical structure that I
get with LaTeX.  I don't _want_ to drag things around on the page. I
want to tell LaTeX once how to place them and have it do that
automatically thereafter.

One final point is that when I write data-analysis software, it's far
easier for me to have it generate reports in LaTeX than in some
mysterious proprietary document format.

Why is this relevant to the NTS discussion? Because many of the things
Lee would like to dispense with are what I value in TeX, and I don't
see the value in having someone spend ten years writing a clone of
MathWriter.

---Jon

------------------------------------------------------------------------------
Jonathan M. Gilligan		Time and Frequency Division
<jongill@lilac.bldrdoc.gov>	National Institute of Standards and Technology
				Boulder, Colorado, USA

Disclaimer --- The government probably disagrees with my opinions.


========================================================================
Date:         Fri, 29 May 92 13:12:00 EST
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: LMLARS01@ULKYVX.bitnet
Subject:      Re: TeX is perfect


Jonathon Gilligan writes:

>Lee Larson writes that he finds TeX increasingly anachronistic in the face of
>fancy WSIWYG word processors. I disagree completely. I don't want to start a
>flame war, but I do want to distinguish
>a) word-processing from typesetting

I am well aware of the religious battles which have been waged over this issue
in recent years. I think I do understand the difference and that is why I use
several programs. But, increasingly, scientific journals are encouraging people
to submit papers in TeX (most commonly LaTeX) format and this blurs the
distinction because many of us are using TeX to write the papers; we don't pass
them to a professional typesetter. In fact, I'll bet the majority of TeX users
are in this position.

>b) logical vs. visual composition

Not all things can be foreseen. When I paste a Mathematica graph into a
MathWriter document, I can see exactly how it affects pagebreaks and how it
relates to the surrounding text. TeX gives me no clue until I have previewed
it.

>c) the comparative advantages and disadvantages of WSIWYG vs. straight text
>   for ease of entering the document into the computer and editing it.

I don't see why it's any easier to enter and use $\int_0^\infty f(x)\,dx$ than
the real thing, which can be entered and edited just as easily, and looks just
as good when it's printed.

>Rather than rehash arguments we've all seen before, saying that my
>preferences are morally superior to Lee's, I'll just say that I prefer
>LaTeX over Word for Windows, Word for Dos, or Word Perfect. I'm agnostic
>about MacIntosh software.

I prefer LaTeX over all the ones you mention by name. Perhaps I'm not a total
moral degenerate! :-)

>There _are_ many features that current commercial word-processing and
>typesetting programs have that I wish TeX had
>(\include creeping.features) but when I try to use the aforementioned
>commercial word-processors (I have no experience with typesetting
>software other than TeX) I miss the sense of logical structure that I
>get with LaTeX.  I don't _want_ to drag things around on the page. I
>want to tell LaTeX once how to place them and have it do that
>automatically thereafter.

I don't disagree. But I don't think the inclusion of graphics will ever be as
automatic as that and I don't see any reason why a front end can't take this
into account. Graphics are becoming ever more important as their generation
becomes easier and their standardization becomes ever more prevalent. Any
typesetting system has to take this into account, or it will join the dinosaur.

My main point is that there is no reason not to support graphics or use the
real symbols such as \le, \ge, \cap, \cup, \to, etc. when nothing is lost by
doing so. Why does this remove logical structure? It seems to me such things
are unrelated to the logical structure of the format.

>Why is this relevant to the NTS discussion? Because many of the things
>Lee would like to dispense with are what I value in TeX, and I don't
>see the value in having someone spend ten years writing a clone of
>MathWriter.

Since the original took less than half that, I don't think it would take 10
years unless there was galloping featuritis. :-).

=============================================================================
Lee Larson                                     lmlars01@ulkyvx.louisville.edu
Department of Mathematics                                       (502)588-6826
University of Louisville
Louisville, Kentucky 40292 USA


========================================================================
Date:         Wed, 27 May 92 03:34:42 +0200
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Claus Langhans <Claus_Langhans@wildcat.fido.de>
Subject:      Re: Backward compatibility (was Welcome message)



 NDl> one reason i do remember for knuth's decision not to support certain
 NDl> features (e.g. graphics) is that these were already handled well
 NDl> enough by other existing software, and were also largely device
 NDl> dependent.  portability and device independence are two of the major
 NDl> guiding principles behind the present tex system, and i doubt that
 NDl> tex would have spread as widely as it has (and we wouldn't now be
 NDl> discussing whether to change the ground rules) otherwise.

You are right, that the portability of TeX is one of the main reasons for its
success, but the necessity for some way producing graphics with TeX is obvious:
TeX itself and its files are portable, but in the moment one uses any kind of
graphic, the files loose their portability.

I know that it is very complicate to make a standard for including bitmap
graphic into TeX, but I think vector graphic schould make its way into NTS.
Bitmap graphic is also one of my whishes, and in my opinion there must be a
compromise between portabilty and graphic support.

Claus

 Mail  : Claus Langhans, U.d.Nussbaeumen 19,
         D-6233 Kelkheim, Germany                 ///
 Voice : ++49-6195-8868  22:00 - 24:00 MEZ/MESZ  ///
 Fido  : Claus Langhans@2:243/43.16          \\\///
 UseNet: Claus_Langhans@wildcat.fido.de       \XX/

========================================================================
Date:         Sat, 30 May 92 11:34:36 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Michael Barr <barr@TRIPLES.MATH.MCGILL.CA>
Subject:      TeX is not perfect!


Not only is TeX lousy at commutative diagrams, but half the latest
tugboat consists of long articles about how to make it do perfectly
reasonable things that can only be done with subtle and difficult
programming.  Actually, they are mostly about how to make a programming
language out of Tex.  I don't know what DEK's reasons for refusing to
make a programming language, but I can't imagine that they are valid
today.  (I put in the time qualifier because they may have had a lot
to do with limited computing power.)  One article had a piece of code
with fifteen (15) \expandafter's in a row!  Something's wrong somewhere.

I answer to the complaint about creeping featurism, I am afraid that
that is exactly what I want.  If TeX is poor and/or inefficient
about commutative diagrams and if I find something that will do them
better, then I may well change to that something.  If commutative
diagrams are of no interest to you, then you will not care about
that, but may care very much about something else.  A lot of network
bandwidth is taken by complaint about floats, which I have never
used.  So if new features include better handling of floats and
commutative diagrams, then there will features I do and don't use.
It is pretty safe to say that every feature will be just what
_someone_ needs.

Many people are using \special's for doing whatever TeX cannot.
Since I consider the machine invariance of TeX one of its most
important aspects, I can view this only with alarm.  It is this, as
much as anything else, that has convinced that a successor must be
sought.  I only hope that it is sufficiently well designed to keep
us going for another ten years.

Among the features I consider crucial are the ability of doing
bezier curves as primitives.  Probably, TeX should just accept them
and pass them through the .dvi file to the device driver.  This is
likely to be the most efficient, in both time and space, way of
doing it.  This one change would make it possible to at least
incorporate vector graphics in a standard into TeX.

Michael Barr


========================================================================
Date:         Sat, 30 May 92 14:05:20 -0700
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Arthur Ogawa <ogawa@ORION.ARC.NASA.GOV>
Subject:      subject of this list
In-Reply-To:  Karl Berry's message of Thu,
              28 May 92 12:43:40 EDT <9205281646.AA23664@orion.arc.nasa.gov>


> I want the discussion to *start* from the assumption that adding some new
> primitives and (maybe) changing others is what we want to do.

I would also like to discuss this approach. I think the discussion of a
ground-up re-design of the programmable typesetting system should be
carried on separately. Let's decide to separate the two subjects, please.

Art

========================================================================
Date:         Sun, 31 May 92 00:28:28 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: laurent@MATH.TORONTO.EDU
Subject:      BETTER LINE SPACING IN PROSE WITH MATH





BETTER LINE SPACING IN PROSE WITH MATH

         Here is one problem that is preventing TeX from achieving
"professional quality" in ordinary mathematical typesetting.

         Suppose that big symbols (with excess depth and height) occur
on successive lines.  The current mechanisms of TeX involving the
\baselineskip, \lineskip, and \lineskiplimit normally lead to
excessive separation of the lines.  This is because the two successive
rectangular line boxes are forced \lineskip apart.  This is "necessary"
only when the oversize symbols happen to be aligned one above the
other, a fairly rare occurrence.  A more pleasing result is almost
always obtained by a different formula which assures that each line
box is \lineskip from the a "standard prose core" of the the lines
above and below. Can such a rule already be implemented with TeX?  I
would also like a marginal warning to help me check that no accidental
collision of big symbols has occurred; when it occasionally does, I
could quickly fix it with a \vadjust{\vskip??}. And of course in case
there are many big symbols I would like to be able to revert
gracefully to Knuth's regime.

          (Texperts please forgive me for ignoring the subtlties of
\lineskiplimit, which are not very relevant here.)

          Classical typesetters managed in the above circumstances to
separate the lines just enough that there be \lineskip distance from
the ink of the one to the ink of the next. What I am asking is that
TeX be able to achieve something like this fairly automatically.  It
is not doing so currently and the quality of its mathematical output
is suffering.


Laurent Siebenmann
<siebenmann@LALCLS.IN2P3.FR>


========================================================================
Date:         Sun, 31 May 92 15:43:03 -0400
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: laurent@MATH.TORONTO.EDU
Subject:      LATE PATTERNS








LATE PATTERNS

     TeX of 1982 was able to erase and/or assimilate
hyphenation patterns at any time.  TeX in versions >=3
cannot.  I regret this.  It has made the portability of
tex typescript using exotic hyphenation patterns a much
more complicated matter because recompilation of the format
using INITEX or VIRTEX is normally required at the site
where the manuscript is received. It also puts severe
practical limits on the number of languages that TeX can
handle in the same typescript, and that may cost TeX
the loyalty of some European organisations.


Laurent Siebenmann
<siebenmann@LALCLS.IN2P3.FR>



========================================================================
Date:         Sun, 31 May 92 15:56:08 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: eijkhout@CS.UTK.EDU
Subject:      Re: BETTER LINE SPACING IN PROSE WITH MATH
In-Reply-To:  Your message of "Sun,
              31 May 92 00:28:28 EDT." <9205310429.AA25484@CS.UTK.EDU>


Laurent Siebenmann complains about line spacing in the presence of math.

> A more pleasing result is almost
>always obtained by a different formula which assures that each line
>box is \lineskip from the a "standard prose core" of the the lines
                       ^^^^^                          ^^^^^^^
Let's hope I interpret this correctly :-)

>above and below. Can such a rule already be implemented with TeX?  I

Laurent, what is the 'standard prose core'? The x-height? Or the height
of whatever text is present? Surely not that latter, because then
line spacing would be irregular if some line had no ascenders or descenders
(some wag once called this 'female prose'. It is rather hard to write female
prose in English. Still, we have to cover that case.)

So do I understand that you want a fixed baseline-to-baseline spacing?

Just set \lineskiplimit-\maxdimen and the \baselineskip value will be
applied no matter how high/low the lines are.

If that's too drastic for some parts of the text, how about

\everymath{\smash}
\def\smash#1${\setbox\z@\hbox{$#1$}\ht\z@\z@ \dp\z@\z@ \box\z@$}

?

>would also like a marginal warning to help me check that no accidental
>collision of big symbols has occurred; when it occasionally does, I

Yes, this would be nice, but it would be substantial addition to TeX.

>could quickly fix it with a \vadjust{\vskip??}. And of course in case

Fixing it by hand? Tsk. Contrary to the TeX philosphy that everything
can be automated.

>there are many big symbols I would like to be able to revert
>gracefully to Knuth's regime.

But seriously, your proposed extension sounds somewhat ad hoc.
I'd be much more inclined to favour it seriously if it were part
of some general mechanism. Remember that the baseline mechanism
of TeX now is very general, and that it applies to all vertically
stacked boxes.

Victor Eijkhout
Department of Computer Science; University of Tennessee at Knoxville
104 Ayres Hall; 1403 Circle Dr.; Knoxville TN 37996-1301
phone: +1 615 974 8298 (secretary 8295; fax 8296); home +1 615 558 3069
    Support the League for Programming Freedom! league@prep.ai.mit.edu


========================================================================
Date:         Sun, 31 May 92 22:10:52 CET
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: bbeeton <BNB@MATH.AMS.COM>
Subject:      Re:  LATE PATTERNS
In-Reply-To:  <01GKO0KUWCXUELNRMD@MATH.AMS.COM>


larry siebenmann states that "tex of 1982 was able to erase and/or
assimilate hyphenation patterns at any time."

i may be mistaken, but believe that the unextended tex82 (i don't
know what may have been true in mltex, for example) has always been
able to accept hyphenation *patterns* only into initex.  (lists of
hyphenation *exceptions* have always been acceptable at any time.)
i'm also not aware of any facility to erase hyphenation patterns
at any stage.  (can someone please confirm or rebut?)

i agree that portability under such conditions is difficult, and
this is a feature that might profitably be looked at more carefully.

by the way, an increase in size of even the english hyphenation
patterns, such as suggested by gerard kuiken (tugboat 11 #1),
requires a larger value for the number of tries than is provided
by tex's default.  this and other defaults are an area that can
usefully be examined now for "standardization" of larger recommended
values without any extensions required.
						-- bb

========================================================================
Date:         Sun, 31 May 92 17:26:21 -0400
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: laurent@MATH.TORONTO.EDU
Subject:      More on BETTER LINE SPACING IN PROSE WITH MATH






More on BETTER LINE SPACING IN PROSE WITH MATH

Michael Barr <barr@triples.math.mcgill.ca>
made a quick reply to BETTER LINE SPACING IN PROSE WITH MATH
as follows:

You are certainly correct about what happens.  I guess the short
answer is that this behaviour is implicit in TeX' box-and-glue
model of text.  Once a line is set, that line is an hbox of a
certain height, which is the max of the heights of the constituent
boxes.

What you want would require a ``skyline'' model of the line and TeX
doesn't do that.  Whether it could or should is another matter
entirely.  It can, of course, be hand tuned by playing with negative
rules or something.  More precisely, putting your large symbols or
whatever in a box and adjusting the height of the box.  I suspect
that doing this automatically would simply involve a large amount of
extra computation.

Actually, I've noticed the opposite problem; not
enough space when a letter with descender happens to be right above
a large symbol.  There is no obvious solution.

Here is my response:

  MB> What you want would require a ``skyline'' model of the line and
  MB> TeX doesn't do that.

I cannot imagine TeX ever being made to see and use an honest
"skyline" model of a line although the master artisan most certainly
does.  I was trying to be realistic and suggest something
almost as good that TeX 4 (alias NTS) most definitely could do at
high speed and with little extra code.  Let me add a little
explanation.  Since horizontal and math modes are already nicely
distinguished by TeX, it should not be too difficult for NTS to
register seperately the height and depth of the math in a given line
that appears as $...$ in prose and other stuff, and also the height
and depth of the prose and other stuff. (By puting math in an
explicit \hbox it would be assimilated as other along with the
prose.)  This simple extra information is all that I was proposing
the new vertical list mechanism should use.

      Naturally, I would hope that this behavior would be made
possibly more by "opening up" some of the black boxes in TeX than by
adding new structure.  In any case, I emphasize that such a new mode
of action should be an OPTION available for high quality typesetting
under texpert surveillance. The default behavior of TeX should NOT
change.

Laurent Siebenmann
<siebenmann@LALCLS.IN2P3.FR>

PS

  MB> Actually, I've noticed the opposite problem; not enough
  MB> space when a letter with descender happens to be right
  MB> above a large symbol.

This sounds like a problem to be solved by increasing \lineskiplimit.


========================================================================
Date:         Sun, 31 May 92 19:51:36 EDT
Reply-To: "NTS-L Distribution list" <NTS-L@vm.urz.Uni-Heidelberg.de>
From: Michael Barr <barr@TRIPLES.MATH.MCGILL.CA>
Subject:      Re:  More on BETTER LINE SPACING IN PROSE WITH MATH


Well, Victor Eijkhout has explained how to use \everymath
to ignore th height of math boxes.  As for my other problem, that is
just the point.  If you increase \lineskiplimit, you get too much space
most of the time instead of not enough occasionally.

Michael Barr

